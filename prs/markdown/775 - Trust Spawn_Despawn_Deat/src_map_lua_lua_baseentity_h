@@ -39,7 +39,7 @@ class CLuaBaseEntity
     CLuaBaseEntity(lua_State*);
     CLuaBaseEntity(CBaseEntity*);
 
-    CBaseEntity* GetBaseEntity()const
+    CBaseEntity* GetBaseEntity() const
     {
         return m_PBaseEntity;
     }
@@ -54,6 +54,7 @@ class CLuaBaseEntity
     int32 messagePublic(lua_State*);        // Sends a public Basic Message
     int32 messageSpecial(lua_State*);       // Sends Special Message
     int32 messageSystem(lua_State*);        // Sends System Message
+    int32 messageCombat(lua_State* L);      // Sends Combat Message
 
     // Variables
     int32 getCharVar(lua_State*);           // Returns a character variable
@@ -243,6 +244,7 @@ class CLuaBaseEntity
     int32 getCampaignAllegiance(lua_State*); // Gets Campaign Allegiance of Entity
     int32 setCampaignAllegiance(lua_State*); // Sets Campaign Allegiance of Entity
 
+    int32 isSeekingParty(lua_State* L);
     int32 getNewPlayer(lua_State* L);
     int32 setNewPlayer(lua_State* L);
     int32 getMentor(lua_State* L);
@@ -418,7 +420,7 @@ class CLuaBaseEntity
     int32 getPartyMember(lua_State* L);             // Get a character entity from another entity's party or alliance
     int32 getPartyLeader(lua_State* L);
     int32 getLeaderID(lua_State* L);              // Get the id of the alliance/party leader *falls back to player id if no party*
-
+    int32 getPartyLastMemberJoinedTime(lua_State* L);
     int32 forMembersInRange(lua_State* L);
 
     int32 addPartyEffect(lua_State*);               // Adds Effect to all party members