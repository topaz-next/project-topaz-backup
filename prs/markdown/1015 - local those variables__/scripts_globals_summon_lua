@@ -11,7 +11,6 @@ function getSummoningSkillOverCap(avatar)
 end
 
 function AvatarPhysicalMove(avatar, target, skill, numberofhits, accmod, dmgmod, dmgmodsubsequent, tpeffect, mtp100, mtp200, mtp300)
-
     local returninfo = {}
 
     local acc = avatar:getACC() + utils.clamp(getSummoningSkillOverCap(avatar), 0, 200)
@@ -116,21 +115,21 @@ function AvatarFinalAdjustments(dmg, mob, skill, target, skilltype, skillparam,
     -- this is for AoE because its only set once
     skill:setMsg(tpz.msg.basic.DAMAGE)
 
-    --Handle shadows depending on shadow behaviour / skilltype
-    if shadowbehav < 5 and shadowbehav ~= MOBPARAM_IGNORE_SHADOWS then --remove 'shadowbehav' shadows.
-        targShadows = target:getMod(tpz.mod.UTSUSEMI)
-        shadowType = tpz.mod.UTSUSEMI
-        if targShadows == 0 then --try blink, as utsusemi always overwrites blink this is okay
+    -- Handle shadows depending on shadow behaviour / skilltype
+    if shadowbehav < 5 and shadowbehav ~= MOBPARAM_IGNORE_SHADOWS then -- remove 'shadowbehav' shadows.
+        local targShadows = target:getMod(tpz.mod.UTSUSEMI)
+        local shadowType = tpz.mod.UTSUSEMI
+        if targShadows == 0 then -- try blink, as utsusemi always overwrites blink this is okay
             targShadows = target:getMod(tpz.mod.BLINK)
             shadowType = tpz.mod.BLINK
         end
 
         if targShadows > 0 then
         -- Blink has a VERY high chance of blocking tp moves, so im assuming its 100% because its easier!
-            if targShadows >= shadowbehav then --no damage, just suck the shadows
+            if targShadows >= shadowbehav then -- no damage, just suck the shadows
                 skill:setMsg(tpz.msg.basic.SHADOW_ABSORB)
                 target:setMod(shadowType, targShadows - shadowbehav)
-                if shadowType == tpz.mod.UTSUSEMI then --update icon
+                if shadowType == tpz.mod.UTSUSEMI then -- update icon
                     effect = target:getStatusEffect(tpz.effect.COPY_IMAGE)
                     if effect ~= nil then
                         if targShadows - shadowbehav == 0 then
@@ -154,30 +153,30 @@ function AvatarFinalAdjustments(dmg, mob, skill, target, skilltype, skillparam,
                 target:delStatusEffect(tpz.effect.BLINK)
             end
         end
-    elseif shadowbehav == MOBPARAM_WIPE_SHADOWS then --take em all!
+    elseif shadowbehav == MOBPARAM_WIPE_SHADOWS then -- take em all!
         target:setMod(tpz.mod.UTSUSEMI, 0)
         target:setMod(tpz.mod.BLINK, 0)
         target:delStatusEffect(tpz.effect.COPY_IMAGE)
         target:delStatusEffect(tpz.effect.BLINK)
     end
 
     -- handle Third Eye using shadowbehav as a guide
-    teye = target:getStatusEffect(tpz.effect.THIRD_EYE)
-    if teye ~= nil and skilltype == tpz.attackType.PHYSICAL then --T.Eye only procs when active with PHYSICAL stuff
-        if shadowbehav == MOBPARAM_WIPE_SHADOWS then --e.g. aoe moves
+    local teye = target:getStatusEffect(tpz.effect.THIRD_EYE)
+    if teye ~= nil and skilltype == tpz.attackType.PHYSICAL then -- T.Eye only procs when active with PHYSICAL stuff
+        if shadowbehav == MOBPARAM_WIPE_SHADOWS then -- e.g. aoe moves
             target:delStatusEffect(tpz.effect.THIRD_EYE)
-        elseif shadowbehav ~= MOBPARAM_IGNORE_SHADOWS then --it can be absorbed by shadows
-            --third eye doesnt care how many shadows, so attempt to anticipate, but reduce
-            --chance of anticipate based on previous successful anticipates.
+        elseif shadowbehav ~= MOBPARAM_IGNORE_SHADOWS then -- it can be absorbed by shadows
+            -- third eye doesnt care how many shadows, so attempt to anticipate, but reduce
+            -- chance of anticipate based on previous successful anticipates.
             prevAnt = teye:getPower()
             if prevAnt == 0 then
-                --100% proc
+                -- 100% proc
                 teye:setPower(1)
                 skill:setMsg(tpz.msg.basic.ANTICIPATE)
                 return 0
             end
             if math.random() * 10 < 8 - prevAnt then
-                --anticipated!
+                -- anticipated!
                 teye:setPower(prevAnt+1)
                 skill:setMsg(tpz.msg.basic.ANTICIPATE)
                 return 0
@@ -186,7 +185,7 @@ function AvatarFinalAdjustments(dmg, mob, skill, target, skilltype, skillparam,
         end
     end
 
-    --TODO: Handle anything else (e.g. if you have Magic Shield and its a Magic skill, then do 0 damage.
+    -- TODO: Handle anything else (e.g. if you have Magic Shield and its a Magic skill, then do 0 damage.
     if skilltype == tpz.attackType.PHYSICAL and target:hasStatusEffect(tpz.effect.PHYSICAL_SHIELD) then
         return 0
     end
@@ -206,7 +205,7 @@ function AvatarFinalAdjustments(dmg, mob, skill, target, skilltype, skillparam,
         return 0
     end
 
-    --handle invincible
+    -- handle invincible
     if target:hasStatusEffect(tpz.effect.INVINCIBLE) and skilltype == tpz.attackType.PHYSICAL then
         return 0
     end
@@ -254,5 +253,5 @@ function avatarMiniFightCheck(caster)
             result = 40 -- Cannot use <spell> in this area.
         end
     end
-      return result
+    return result
 end