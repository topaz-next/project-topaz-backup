@@ -1675,7 +1675,8 @@ inline int32 CLuaBaseEntity::atPoint(lua_State* L)
         lua_pop(L, 1);
     }
 
-    lua_pushboolean(L, m_PBaseEntity->loc.p.x == posX && m_PBaseEntity->loc.p.y == posY && m_PBaseEntity->loc.p.z == posZ);
+    lua_pushboolean(L, 1000. * m_PBaseEntity->loc.p.x == 1000. * posX && 1000. * m_PBaseEntity->loc.p.y == 1000. * posY &&
+                           1000. * m_PBaseEntity->loc.p.z == 1000. * posZ);
 
     return 1;
 }
@@ -4622,7 +4623,32 @@ inline int32 CLuaBaseEntity::checkNameFlags(lua_State* L)
         lua_pushboolean(L, false);
     return 1;
 }
+inline int32 CLuaBaseEntity::getLookSize(lua_State* L)
+{
+    TPZ_DEBUG_BREAK_IF(m_PBaseEntity == nullptr);
+
+    lua_pushinteger(L, m_PBaseEntity->GetLookSize());
+
+    return 1;
+}
 
+inline int32 CLuaBaseEntity::setLookSize(lua_State* L)
+{
+    TPZ_DEBUG_BREAK_IF(m_PBaseEntity == nullptr);
+
+    if (m_PBaseEntity->objtype == TYPE_PC)
+    {
+    }
+    else
+    {
+        TPZ_DEBUG_BREAK_IF(lua_isnil(L, 1) || !lua_isnumber(L, 1));
+
+        m_PBaseEntity->SetLookSize((uint16)lua_tointeger(L, 1));
+    }
+    m_PBaseEntity->updatemask |= UPDATE_LOOK;
+
+    return 0;
+}
 /************************************************************************
 *  Function: getModelId()
 *  Purpose : Returns the integer value of the entity's Model ID
@@ -14694,6 +14720,8 @@ Lunar<CLuaBaseEntity>::Register_t CLuaBaseEntity::methods[] =
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,checkNameFlags),
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,getModelId),
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,setModelId),
+    LUNAR_DECLARE_METHOD(CLuaBaseEntity, getLookSize),
+    LUNAR_DECLARE_METHOD(CLuaBaseEntity, setLookSize),
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,costume),
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,costume2),
 