@@ -55,6 +55,7 @@ When a status effect is gained twice on a player. It can do one or more of the f
 #include "utils/itemutils.h"
 #include "enmity_container.h"
 #include "map.h"
+#include "notoriety_container.h"
 #include "latent_effect_container.h"
 #include "status_effect_container.h"
 #include "utils/zoneutils.h"
@@ -1506,39 +1507,55 @@ void CStatusEffectContainer::CheckEffectsExpiry(time_point tick)
 *                                                                       *
 ************************************************************************/
 
-
 void CStatusEffectContainer::HandleAura(CStatusEffect* PStatusEffect)
 {
     CBattleEntity* PEntity = static_cast<CBattleEntity*>(m_POwner);
-    uint16 targetType = (uint16)PStatusEffect->GetTier();
+    AURATARGET auraTarget = static_cast<AURATARGET>(PStatusEffect->GetTier());
 
-    switch (targetType)
+    if (PEntity->objtype == TYPE_PET || PEntity->objtype == TYPE_TRUST)
     {
-    case ALLEGIANCE_PLAYER:
+        PEntity = PEntity->PMaster;
+    }
+
+    float aura_range = 6.25; // TODO: Add mods
+
+    if (PEntity->objtype == TYPE_PC)
     {
-        if (PEntity->objtype == TYPE_PET || PEntity->objtype == TYPE_TRUST)
+        if (auraTarget == AURATARGET_ALLIES)
         {
-            PEntity = PEntity->PMaster;
+            PEntity->ForParty([&](CBattleEntity* PMember) {
+                if (PMember != nullptr && PEntity->loc.zone->GetID() == PMember->loc.zone->GetID() && distance(m_POwner->loc.p, PMember->loc.p) <= aura_range && !PMember->isDead())
+                {
+                    CStatusEffect* PEffect = new CStatusEffect(
+                        (EFFECT)PStatusEffect->GetSubID(), // Effect ID
+                        (uint16)PStatusEffect->GetSubID(), // Effect Icon (Associated with ID)
+                        (uint16)PStatusEffect->GetSubPower(), // Power
+                        3, // Tick
+                        4); // Duration
+                    PEffect->SetFlag(EFFECTFLAG_NO_LOSS_MESSAGE);
+                    PMember->StatusEffectContainer->AddStatusEffect(PEffect, true);
+                }
+            });
         }
-        PEntity->ForParty([&](CBattleEntity* PMember)
+        else if (auraTarget == AURATARGET_ENEMIES)
         {
-            if (PMember != nullptr && PEntity->loc.zone->GetID() == PMember->loc.zone->GetID() && distance(m_POwner->loc.p, PMember->loc.p) <= 6.25 && !PMember->isDead())
+            for (CBattleEntity* PTarget : *PEntity->PNotorietyContainer)
             {
-                CStatusEffect* PEffect = new CStatusEffect(
-                    (EFFECT)PStatusEffect->GetSubID(), // Effect ID
-                    (uint16)PStatusEffect->GetSubID(), // Effect Icon (Associated with ID)
-                    (uint16)PStatusEffect->GetSubPower(), // Power
-                    3, // Tick
-                    4); // Duration
-                PEffect->SetFlag(EFFECTFLAG_NO_LOSS_MESSAGE);
-                PMember->StatusEffectContainer->AddStatusEffect(PEffect, true);
+                if (PTarget != nullptr && PEntity->loc.zone->GetID() == PTarget->loc.zone->GetID() && distance(m_POwner->loc.p, PTarget->loc.p) <= aura_range && !PTarget->isDead())
+                {
+                    CStatusEffect* PEffect = new CStatusEffect(
+                        (EFFECT)PStatusEffect->GetSubID(), // Effect ID
+                        (uint16)PStatusEffect->GetSubID(), // Effect Icon (Associated with ID)
+                        (uint16)PStatusEffect->GetSubPower(), // Power
+                        3, // Tick
+                        4); // Duration
+                    PEffect->SetFlag(EFFECTFLAG_NO_LOSS_MESSAGE);
+                    PTarget->StatusEffectContainer->AddStatusEffect(PEffect, true);
+                }
             }
-        });
-    }
-    break;
-    default:
-        break;
+        }
     }
+    // TODO: Mob Auras
 }
 
 /************************************************************************