@@ -50,6 +50,7 @@
 #include "../mobskill.h"
 #include "../mob_spell_container.h"
 #include "../recast_container.h"
+#include "../roe.h"
 #include "../spell.h"
 #include "../status_effect_container.h"
 #include "../timetriggers.h"
@@ -6659,14 +6660,14 @@ inline int32 CLuaBaseEntity::setEminenceCompleted(lua_State *L)
 
     if (repeat)
     {
-        charutils::SetEminenceRecordProgress(PChar, recordID, 0);
+        roeutils::SetEminenceRecordProgress(PChar, recordID, 0);
     }
     else
     {
-        charutils::DelEminenceRecord(PChar, recordID);
+        roeutils::DelEminenceRecord(PChar, recordID);
     }
 
-    charutils::SetEminenceRecordCompletion(PChar, recordID, status);
+    roeutils::SetEminenceRecordCompletion(PChar, recordID, status);
 
     return 0;
 }
@@ -6688,7 +6689,7 @@ inline int32 CLuaBaseEntity::getEminenceCompleted(lua_State *L)
     CCharEntity* PChar = (CCharEntity*)m_PBaseEntity;
     uint16 recordID = (uint16)lua_tointeger(L, 1);
 
-    lua_pushboolean(L, (bool)charutils::GetEminenceRecordCompletion(PChar, recordID));
+    lua_pushboolean(L, (bool)roeutils::GetEminenceRecordCompletion(PChar, recordID));
 
     return 1;
 }
@@ -6712,7 +6713,7 @@ inline int32 CLuaBaseEntity::setEminenceProgress(lua_State *L)
     uint16 recordID = (uint16)lua_tointeger(L, 1);
     uint32 progress = (uint32)lua_tointeger(L, 2);
 
-    bool result = charutils::SetEminenceRecordProgress(PChar, recordID, progress);
+    bool result = roeutils::SetEminenceRecordProgress(PChar, recordID, progress);
     lua_pushboolean(L, result);
 
     uint32 total = lua_tointeger(L, 3);
@@ -6739,12 +6740,18 @@ inline int32 CLuaBaseEntity::getEminenceProgress(lua_State *L)
 
     TPZ_DEBUG_BREAK_IF(lua_isnil(L, 1) || !lua_isnumber(L, 1));
 
+    if(m_PBaseEntity->objtype != TYPE_PC)
+    {
+        lua_pushnil(L);
+        return 1;
+    }
+
     CCharEntity* PChar = (CCharEntity*)m_PBaseEntity;
     uint16 recordID = (uint16)lua_tointeger(L, 1);
 
-    if(charutils::HasEminenceRecord(PChar, recordID))
+    if(roeutils::HasEminenceRecord(PChar, recordID))
     {
-        uint32 progress = charutils::GetEminenceRecordProgress(PChar, recordID);
+        uint32 progress = roeutils::GetEminenceRecordProgress(PChar, recordID);
         lua_pushinteger(L, progress);
     } else {
         lua_pushnil(L);
@@ -9176,6 +9183,27 @@ inline int32 CLuaBaseEntity::disableLevelSync(lua_State* L)
     return 0;
 }
 
+/************************************************************************
+*  Function: isLevelSync()
+*  Purpose :
+*  Example : player:isLevelSync()
+*  Notes   :
+************************************************************************/
+
+inline int32 CLuaBaseEntity::isLevelSync(lua_State* L)
+{
+    TPZ_DEBUG_BREAK_IF(m_PBaseEntity->objtype != TYPE_PC);
+
+    CCharEntity* PChar = (CCharEntity*)m_PBaseEntity;
+
+    if (PChar->PParty)
+        lua_pushboolean(L, (PChar->PParty->GetSyncTarget() && PChar->PParty->GetSyncTarget() != PChar) );
+    else
+        lua_pushboolean(L, false);
+
+    return 1;
+}
+
 /************************************************************************
 *  Function: checkSoloPartyAlliance()
 *  Purpose : Checks if Entity is solo, in a party, or in an alliance
@@ -14677,6 +14705,7 @@ Lunar<CLuaBaseEntity>::Register_t CLuaBaseEntity::methods[] =
 
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,reloadParty),
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,disableLevelSync),
+    LUNAR_DECLARE_METHOD(CLuaBaseEntity,isLevelSync),
 
     LUNAR_DECLARE_METHOD(CLuaBaseEntity,checkSoloPartyAlliance),
 