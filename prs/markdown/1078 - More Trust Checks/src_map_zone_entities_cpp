@@ -556,26 +556,27 @@ void CZoneEntities::SpawnTRUSTs(CCharEntity* PChar)
 {
     for (EntityList_t::const_iterator it = m_trustList.begin(); it != m_trustList.end(); ++it)
     {
-        CTrustEntity* PCurrentTrust = (CTrustEntity*)it->second;
-        CCharEntity* master = (CCharEntity*)PCurrentTrust->PMaster;
-        SpawnIDList_t::iterator TRUST = PChar->SpawnTRUSTList.lower_bound(PCurrentTrust->id);
-
-        if (PCurrentTrust->status == STATUS_NORMAL &&
-            distance(PChar->loc.p, PCurrentTrust->loc.p) < 50)
+        if (CTrustEntity* PCurrentTrust = dynamic_cast<CTrustEntity*>(it->second))
         {
-            if (TRUST == PChar->SpawnTRUSTList.end() || PChar->SpawnTRUSTList.key_comp()(PCurrentTrust->id, TRUST->first))
+            CCharEntity* master = static_cast<CCharEntity*>(PCurrentTrust->PMaster);
+            SpawnIDList_t::iterator TRUST = PChar->SpawnTRUSTList.lower_bound(PCurrentTrust->id);
+
+            if (PCurrentTrust->status == STATUS_NORMAL && distance(PChar->loc.p, PCurrentTrust->loc.p) < 50)
             {
-                PChar->SpawnTRUSTList.insert(TRUST, SpawnIDList_t::value_type(PCurrentTrust->id, PCurrentTrust));
-                PChar->pushPacket(new CEntityUpdatePacket(PCurrentTrust, ENTITY_SPAWN, UPDATE_ALL_MOB));
-                PChar->pushPacket(new CTrustSyncPacket(master, PCurrentTrust));
+                if (TRUST == PChar->SpawnTRUSTList.end() || PChar->SpawnTRUSTList.key_comp()(PCurrentTrust->id, TRUST->first))
+                {
+                    PChar->SpawnTRUSTList.insert(TRUST, SpawnIDList_t::value_type(PCurrentTrust->id, PCurrentTrust));
+                    PChar->pushPacket(new CEntityUpdatePacket(PCurrentTrust, ENTITY_SPAWN, UPDATE_ALL_MOB));
+                    PChar->pushPacket(new CTrustSyncPacket(master, PCurrentTrust));
+                }
             }
-        }
-        else {
-            if (TRUST != PChar->SpawnTRUSTList.end() &&
-                !(PChar->SpawnTRUSTList.key_comp()(PCurrentTrust->id, TRUST->first)))
+            else
             {
-                PChar->SpawnTRUSTList.erase(TRUST);
-                PChar->pushPacket(new CEntityUpdatePacket(PCurrentTrust, ENTITY_DESPAWN, UPDATE_NONE));
+                if (TRUST != PChar->SpawnTRUSTList.end() && !(PChar->SpawnTRUSTList.key_comp()(PCurrentTrust->id, TRUST->first)))
+                {
+                    PChar->SpawnTRUSTList.erase(TRUST);
+                    PChar->pushPacket(new CEntityUpdatePacket(PCurrentTrust, ENTITY_DESPAWN, UPDATE_NONE));
+                }
             }
         }
     }
@@ -1086,35 +1087,41 @@ void CZoneEntities::ZoneServer(time_point tick, bool check_regions)
     EntityList_t::const_iterator trustit = m_trustList.begin();
     while (trustit != m_trustList.end())
     {
-        CTrustEntity* PTrust = (CTrustEntity*)trustit->second;
-        PTrust->PRecastContainer->Check();
-        PTrust->StatusEffectContainer->CheckEffectsExpiry(tick);
-        if (tick > m_EffectCheckTime)
-        {
-            PTrust->StatusEffectContainer->TickRegen(tick);
-            PTrust->StatusEffectContainer->TickEffects(tick);
-        }
-        PTrust->PAI->Tick(tick);
-        if (PTrust->status == STATUS_DISAPPEAR)
+        if (CTrustEntity* PTrust = dynamic_cast<CTrustEntity*>(trustit->second))
         {
-            for (auto PMobIt : m_mobList)
+            PTrust->PRecastContainer->Check();
+            PTrust->StatusEffectContainer->CheckEffectsExpiry(tick);
+            if (tick > m_EffectCheckTime)
             {
-                CMobEntity* PCurrentMob = (CMobEntity*)PMobIt.second;
-                PCurrentMob->PEnmityContainer->Clear(PTrust->id);
+                PTrust->StatusEffectContainer->TickRegen(tick);
+                PTrust->StatusEffectContainer->TickEffects(tick);
             }
-
-            for (EntityList_t::const_iterator it = m_charList.begin(); it != m_charList.end(); ++it)
+            PTrust->PAI->Tick(tick);
+            if (PTrust->status == STATUS_DISAPPEAR)
             {
-                CCharEntity* PChar = (CCharEntity*)it->second;
-                if (distance(PChar->loc.p, PTrust->loc.p) < 50)
+                for (auto PMobIt : m_mobList)
                 {
-                    PChar->SpawnTRUSTList.erase(PTrust->id);
-                    PChar->ReloadPartyInc();
+                    CMobEntity* PCurrentMob = (CMobEntity*)PMobIt.second;
+                    PCurrentMob->PEnmityContainer->Clear(PTrust->id);
                 }
-            }
 
-            delete trustit->second;
-            m_trustList.erase(trustit++);
+                for (EntityList_t::const_iterator it = m_charList.begin(); it != m_charList.end(); ++it)
+                {
+                    CCharEntity* PChar = (CCharEntity*)it->second;
+                    if (distance(PChar->loc.p, PTrust->loc.p) < 50)
+                    {
+                        PChar->SpawnTRUSTList.erase(PTrust->id);
+                        PChar->ReloadPartyInc();
+                    }
+                }
+
+                delete trustit->second;
+                m_trustList.erase(trustit++);
+            }
+            else
+            {
+                ++trustit;
+            }
         }
         else
         {