@@ -2,13 +2,13 @@
 -- func: zone
 -- desc: Teleports a player to the given zone.
 ---------------------------------------------------------------------------------------------------
-require("scripts/globals/zone");
+require("scripts/globals/zone")
 
 cmdprops =
 {
     permission = 1,
     parameters = "b"
-};
+}
 
 ---------------------------------------------------------------------------------------------------
 -- desc: List of zones with their auto-translated group and message id.
@@ -274,80 +274,80 @@ local zone_list =
     { 0x27, 0x59, 284 }, -- Celennia Memorial Library
     { 0x27, 0x5B, 285 }, -- Feretory
     { 0x14, 0x09, 288 }, -- Escha - Zi'Tah
-};
+}
 
 function error(player, msg)
-    player:PrintToPlayer(msg);
-    player:PrintToPlayer("!zone <zone ID or autotranslate phrase>");
-end;
+    player:PrintToPlayer(msg)
+    player:PrintToPlayer("!zone <zone ID or autotranslate phrase>")
+end
 
 function getBytePos(s,needle)
-    local i;
-    local b;
+    local i
+    local b
     for i=1,string.len(s),1 do
         if (string.byte(s, i) == needle) then
-            return i;
+            return i
         end
     end
-    return nil;
-end;
+    return nil
+end
 
 ---------------------------------------------------------------------------------------------------
 -- func: onTrigger
 -- desc: Called when this command is invoked.
 ---------------------------------------------------------------------------------------------------
 function onTrigger(player, bytes)
-    local x = 0;
-    local y = 0;
-    local z = 0;
-    local rot = 0;
-    local zone;
+    local x = 0
+    local y = 0
+    local z = 0
+    local rot = 0
+    local zone
 
     if (bytes == nil) then
-        error(player, "You must provide a zone ID or autotranslate phrase.");
-        return;
+        error(player, "You must provide a zone ID or autotranslate phrase.")
+        return
     end
-    bytes = string.sub(bytes,6);
-    local atpos = getBytePos(bytes, 253);
+    bytes = string.sub(bytes,6)
+    local atpos = getBytePos(bytes, 253)
 
     -- validate destination
     if (atpos ~= nil) then
         -- destination is an auto-translate phrase
-        local groupId = string.byte(bytes, atpos + 3);
-        local messageId = string.byte(bytes, atpos + 4);
+        local groupId = string.byte(bytes, atpos + 3)
+        local messageId = string.byte(bytes, atpos + 4)
         for k, v in pairs(zone_list) do
             if (v[1] == groupId and v[2] == messageId) then
-                x = v[4] or 0;
-                y = v[5] or 0;
-                z = v[6] or 0;
-                rot = 0;
-                zone = v[3];
-                break;
+                x = v[4] or 0
+                y = v[5] or 0
+                z = v[6] or 0
+                rot = 0
+                zone = v[3]
+                break
             end
         end
         if (zone == nil) then
-            error(player,"Auto-translated phrase is not a zone.");
-            return;
+            error(player,"Auto-translated phrase is not a zone.")
+            return
         end
     else
         -- destination is a zone ID.
-        zone = tonumber(bytes);
+        zone = tonumber(bytes)
         if (zone == nil or zone < 0 or zone >= tpz.zone.MAX_ZONE) then
-            error(player, "Invalid zone ID.");
-            return;
+            error(player, "Invalid zone ID.")
+            return
         end
         for k, v in pairs(zone_list) do
             if (v[3] == zone) then
-                x = v[4] or 0;
-                y = v[5] or 0;
-                z = v[6] or 0;
-                rot = 0;
-                zone = v[3];
-                break;
+                x = v[4] or 0
+                y = v[5] or 0
+                z = v[6] or 0
+                rot = 0
+                zone = v[3]
+                break
             end
         end
     end
 
     -- send player to destination
-    player:setPos(x, y, z, rot, zone);
+    player:setPos(x, y, z, rot, zone)
 end