@@ -7,7 +7,7 @@ cmdprops =
 {
     permission = 1,
     parameters = "sis"
-};
+}
 
 function onTrigger(player, target, cellId, reason)
     local jailCells =
@@ -23,31 +23,31 @@ function onTrigger(player, target, cellId, reason)
         {-620, -400,  220, 0},  {-180, -400,  220, 0}, {260, -400,  220, 0}, {700, -400,  220, 0},
         {-620, -400, -220, 0},  {-180, -400, -220, 0}, {260, -400, -220, 0}, {700, -400, -220, 0},
         {-620, -400, -620, 0},  {-180, -400, -620, 0}, {260, -400, -620, 0}, {700, -400, -620, 0},
-    };
+    }
 
     -- Validate the target..
-    local targ = GetPlayerByName( target );
+    local targ = GetPlayerByName( target )
     if (targ == nil) then
-        player:PrintToPlayer( string.format( "Invalid player '%s' given.", target ) );
-        return;
+        player:PrintToPlayer( string.format( "Invalid player '%s' given.", target ) )
+        return
     end
 
     -- Validate the cell id..
     if (cellId == nil or cellId == 0 or cellId > 32) then
-        cellId = 1;
+        cellId = 1
     end
     
     -- Validate the reason..
     if (reason == nil) then
-        reason = "Unspecified.";
+        reason = "Unspecified."
     end
 
     -- Print that we have jailed someone..
-    local message = string.format( '%s jailed %s(%d) into cell %d. Reason: %s', player:getName(), target, targ:getID(), cellId, reason );
-    printf( message );
+    local message = string.format( '%s jailed %s(%d) into cell %d. Reason: %s', player:getName(), target, targ:getID(), cellId, reason )
+    printf( message )
 
     -- Send the target to jail..
-    local dest = jailCells[ cellId ];
-    targ:setCharVar( "inJail", cellId );
-    targ:setPos( dest[1], dest[2], dest[3], dest[4], 131 );
+    local dest = jailCells[ cellId ]
+    targ:setCharVar( "inJail", cellId )
+    targ:setPos( dest[1], dest[2], dest[3], dest[4], 131 )
 end
\ No newline at end of file