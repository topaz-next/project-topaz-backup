@@ -1403,13 +1403,16 @@ namespace petutils
     void LoadPet(CBattleEntity* PMaster, uint32 PetID, bool spawningFromZone)
     {
         TPZ_DEBUG_BREAK_IF(PMaster == nullptr);
+        TPZ_DEBUG_BREAK_IF(PetID >= MAX_PETID);
 
         Pet_t* PPetData = new Pet_t();
 
         PPetData = *std::find_if(g_PPetList.begin(), g_PPetList.end(), [PetID](Pet_t* t) { return t->PetID == PetID; });
 
         if (PMaster->GetMJob() != JOB_DRG && PetID == PETID_WYVERN)
+        {
             return;
+        }
 
         if (PMaster->objtype == TYPE_PC)
         {
@@ -1523,6 +1526,10 @@ namespace petutils
         {
             petType = PETTYPE_AUTOMATON;
         }
+        else if (PetID == PETID_LUOPAN)
+        {
+            petType = PETTYPE_LUOPAN;
+        }
 
         CPetEntity* PPet = nullptr;
         if (petType == PETTYPE_AUTOMATON && PMaster->objtype == TYPE_PC)
@@ -1537,8 +1544,11 @@ namespace petutils
 
         PPet->loc = PMaster->loc;
 
-        // spawn me randomly around master
-        PPet->loc.p = nearPosition(PMaster->loc.p, CPetController::PetRoamDistance, (float)M_PI);
+        if (petType != PETTYPE_LUOPAN)
+        {
+            // spawn me randomly around master
+            PPet->loc.p = nearPosition(PMaster->loc.p, CPetController::PetRoamDistance, (float)M_PI);
+        }
 
         if (petType != PETTYPE_AUTOMATON)
         {
@@ -1718,6 +1728,15 @@ namespace petutils
                 PPet->addModifier(Mod::MDEF, PChar->PMeritPoints->GetMeritValue(MERIT_FINE_TUNING, PChar));
             }
         }
+        else if (PPet->getPetType() == PETTYPE_LUOPAN && PMaster->objtype == TYPE_PC)
+        {
+            PPet->SetMLevel(PMaster->GetMLevel());
+            PPet->health.maxhp = (uint32)floor((250 * PPet->GetMLevel()) / 15);
+            PPet->health.hp = PPet->health.maxhp;
+
+            // Just sit, do nothing
+            PPet->speed = 0;
+        }
 
         FinalizePetStatistics(PMaster, PPet);
         PPet->status = STATUS_NORMAL;