@@ -4,55 +4,30 @@
 ---------------------------------------------------------------------------------------------------
 
 require("scripts/globals/status")
+require("scripts/globals/commands")
 
 cmdprops =
 {
     permission = 1,
-    parameters = "ss"
+    parameters = "sn"
 }
 
-function error(player, msg)
-    player:PrintToPlayer(msg)
-    player:PrintToPlayer("!mobsub {mob ID} <animation ID>")
-end
-
-function onTrigger(player, arg1, arg2)
-    local target
-    local animationId
+function onTrigger(caller, entity, animationId, target)
+    local targ = tpz.commands.getTargetMob(caller, entity, target)
+    local usage = "!mobsub <animation ID> {mob ID}"
 
-    if (arg2 ~= nil) then
-        target = arg1
-        animationId = arg2
-    elseif (arg1 ~= nil) then
-        animationId = arg1
-    else
-        error(player, "You must provide an animation ID.")
+    if (targ == nil) then
+        tpz.commands.error(caller, entity, "You must target or enter a valid mobID.", usage)
         return
     end
 
-    -- validate target
-    local targ
-    if (target == nil) then
-        targ = player:getCursorTarget()
-        if (targ == nil or not targ:isMob()) then
-            error(player, "You must either provide a mob ID or target a mob.")
-            return
-        end
-    else
-        targ = GetMobByID(target)
-        if (targ == nil) then
-            error(player, "Invalid mob ID.")
-            return
-        end
-    end
-
     -- validate animationId
     animationId = tonumber(animationId) or tpz.anim[string.upper(animationId)]
     if (animationId == nil or animationId < 0) then
-        error(player, "Invalid animation ID.")
+        tpz.commands.error(caller, entity, "Invalid animation ID.", usage)
         return
     end
 
     -- set animation sub
-    targ:AnimationSub( animationId )
+    targ:AnimationSub(animationId)
 end