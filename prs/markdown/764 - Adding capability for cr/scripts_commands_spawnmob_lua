@@ -3,42 +3,41 @@
 -- desc: Spawns a mob.
 ---------------------------------------------------------------------------------------------------
 
+require("scripts/globals/commands")
+
 cmdprops =
 {
     permission = 1,
-    parameters = "iii"
+    parameters = "nii"
 }
 
-function error(player, msg)
-    player:PrintToPlayer(msg)
-    player:PrintToPlayer("!spawnmob <mob ID> {despawntime} {respawntime}")
-end
-
-function onTrigger(player, mobId, despawntime, respawntime)
+function onTrigger(caller, entity, mobId, despawntime, respawntime)
+    local usage = "!spawnmob <mob ID> {despawntime} {respawntime}"
 
     -- validate mobId
     if (mobId == nil) then
-        error(player, "You must provide a mob ID.")
+        tpz.commands.error(caller, entity, "You must provide a mob ID.", usage)
         return
     end
-    local targ = GetMobByID(mobId)
+
+    local targ = tpz.commands.getTargetMob(caller, entity, mobId)
     if (targ == nil) then
-        error(player, "Invalid mob ID.")
+        tpz.commands.error(caller, entity, "Invalid mob ID.", usage)
         return
     end
 
     -- validate despawntime
     if (despawntime ~= nil and despawntime < 0) then
-        error(player, "Invalid despawn time.")
+        tpz.commands.error(caller, entity, "Invalid despawn time.", usage)
         return
     end
 
     -- validate respawntime
     if (respawntime ~= nil and respawntime < 0) then
-        error(player, "Invalid respawn time.")
+        tpz.commands.error(caller, entity, "Invalid respawn time.", usage)
         return
     end
 
-    SpawnMob( targ:getID(), despawntime, respawntime )
-    player:PrintToPlayer( string.format("Spawned %s %s.", targ:getName(), targ:getID()) )
+    SpawnMob(targ:getID(), despawntime, respawntime)
+    tpz.commands.print(caller, entity, string.format("Spawned %s %s.", targ:getName(), targ:getID()))
 end