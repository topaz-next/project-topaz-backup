@@ -3,45 +3,38 @@
 -- desc: Adds the specified currency to the player
 ---------------------------------------------------------------------------------------------------
 
+require("scripts/globals/commands")
+
 cmdprops =
 {
     permission = 1,
-    parameters = "sis"
+    parameters = "sit"
 }
 
-function error(player, msg)
-    player:PrintToPlayer(msg)
-    player:PrintToPlayer("!addcurrency <currency type> <amount> {player}")
-end
-
-function onTrigger(player,currency,amount,target)
-    -- validate target
-    local targ
-    if (target == nil) then
-        targ = player
-    else
-        targ = GetPlayerByName(target)
-        if (targ == nil) then
-            error(player, string.format("Player named '%s' not found!", target))
-            return
-        end
+function onTrigger(caller, entity, currency, amount, target)
+    local targ = tpz.commands.getTargetPC(caller, entity, target)
+    local usage = "!addcurrency <currency type> <amount> {player}"
+    
+    if (targ == nil) then
+        tpz.commands.error(caller, entity, "You must target or enter a player name.", usage)
+        return
     end
 
     -- validate currency
     -- note: getCurrency does not ever return nil at the moment.  will work on this in future update.
     if (currency == nil or targ:getCurrency(currency) == nil) then
-        error(player, "Invalid currency type.")
+        tpz.commands.error(caller, entity, "Invalid currency type.", usage)
         return
     end
 
     -- validate amount
     if (amount == nil or amount < 1) then
-        error(player, "Invalid amount.")
+        tpz.commands.error(caller, entity, "Invalid amount.", usage)
         return
     end
 
     -- add currency
     targ:addCurrency(currency,amount)
     local newAmount = targ:getCurrency(currency)
-    player:PrintToPlayer(string.format("%s was given %i %s, for a total of %i.",targ:getName(),amount,currency,newAmount))
+    tpz.commands.print(caller, entity, string.format("%s was given %i %s, for a total of %i." ,targ:getName(), amount, currency, newAmount))
 end