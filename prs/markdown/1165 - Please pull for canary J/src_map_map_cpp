@@ -38,6 +38,7 @@ along with this program.  If not, see http://www.gnu.org/licenses/
 #include "utils/battleutils.h"
 #include "utils/charutils.h"
 #include "utils/fishingutils.h"
+#include "utils/gardenutils.h"
 #include "utils/guildutils.h"
 #include "utils/instanceutils.h"
 #include "utils/itemutils.h"
@@ -47,13 +48,16 @@ along with this program.  If not, see http://www.gnu.org/licenses/
 #include "packet_system.h"
 #include "party.h"
 #include "utils/petutils.h"
+#include "utils/trustutils.h"
+#include "roe.h"
 #include "spell.h"
 #include "time_server.h"
 #include "transport.h"
 #include "vana_time.h"
 #include "status_effect_container.h"
 #include "utils/zoneutils.h"
 #include "conquest_system.h"
+#include "daily_system.h"
 #include "utils/mobutils.h"
 #include "ai/controllers/automaton_controller.h"
 
@@ -201,6 +205,10 @@ int32 do_init(int32 argc, char** argv)
     itemutils::Initialize();
     ShowMessage("\t\t\t - " CL_GREEN"[OK]" CL_RESET"\n");
 
+    ShowStatus("do_init: loading plants");
+    gardenutils::Initialize();
+    ShowMessage("\t\t\t - " CL_GREEN "[OK]" CL_RESET "\n");
+
     // нужно будет написать один метод для инициализации всех данных в battleutils
     // и один метод для освобождения этих данных
 
@@ -221,7 +229,10 @@ int32 do_init(int32 argc, char** argv)
     battleutils::LoadMobSkillsList();
     battleutils::LoadSkillChainDamageModifiers();
     petutils::LoadPetList();
+    trustutils::LoadTrustList();
     mobutils::LoadCustomMods();
+    daily::LoadDailyItems();
+    roeutils::init();
 
     ShowStatus("do_init: loading zones");
     zoneutils::LoadZoneList();
@@ -269,6 +280,7 @@ void do_final(int code)
     battleutils::FreeMobSkillList();
 
     petutils::FreePetList();
+    trustutils::FreeTrustList();
     zoneutils::FreeZoneList();
     luautils::free();
     message::close();
@@ -967,27 +979,34 @@ int32 map_config_default()
     map_config.speed_mod = 0;
     map_config.mount_speed_mod = 0;
     map_config.mob_speed_mod = 0;
-    map_config.skillup_chance_multiplier = 2.5f;
-    map_config.craft_chance_multiplier = 2.6f;
+    map_config.skillup_chance_multiplier = 1.0f;
+    map_config.craft_chance_multiplier = 1.0f;
     map_config.skillup_amount_multiplier = 1;
     map_config.craft_amount_multiplier = 1;
-    map_config.craft_day_matters = 1;
-    map_config.craft_moonphase_matters = 0;
-    map_config.craft_direction_matters = 0;
+    map_config.craft_common_cap = 700;
+    map_config.craft_specialization_points = 400;
+    map_config.garden_day_matters = false;
+    map_config.garden_moonphase_matters = false;
+    map_config.garden_pot_matters = false;
+    map_config.garden_mh_aura_matters = false;
     map_config.mob_tp_multiplier = 1.0f;
     map_config.player_tp_multiplier = 1.0f;
     map_config.nm_hp_multiplier = 1.0f;
     map_config.mob_hp_multiplier = 1.0f;
     map_config.player_hp_multiplier = 1.0f;
+    map_config.alter_ego_hp_multiplier = 1.0f;
     map_config.nm_mp_multiplier = 1.0f;
     map_config.mob_mp_multiplier = 1.0f;
     map_config.player_mp_multiplier = 1.0f;
+    map_config.alter_ego_mp_multiplier = 1.0f;
     map_config.sj_mp_divisor = 2.0f;
     map_config.subjob_ratio = 1;
     map_config.include_mob_sj = false;
     map_config.nm_stat_multiplier = 1.0f;
     map_config.mob_stat_multiplier = 1.0f;
     map_config.player_stat_multiplier = 1.0f;
+    map_config.alter_ego_stat_multiplier = 1.0f;
+    map_config.alter_ego_skill_multiplier = 1.0f;
     map_config.ability_recast_multiplier = 1.0f;
     map_config.blood_pact_shared_timer = 0;
     map_config.vanadiel_time_epoch = 0;
@@ -1016,6 +1035,8 @@ int32 map_config_default()
     map_config.skillup_bloodpact = true;
     map_config.anticheat_enabled = false;
     map_config.anticheat_jail_disable = false;
+    map_config.daily_tally_amount = 10;
+    map_config.daily_tally_limit = 50000;
     return 0;
 }
 
@@ -1149,6 +1170,10 @@ int32 map_config_read(const int8* cfgName)
         {
             map_config.player_hp_multiplier = (float)atof(w2);
         }
+        else if (strcmp(w1, "alter_ego_hp_multiplier") == 0)
+        {
+            map_config.alter_ego_hp_multiplier = (float)atof(w2);
+        }
         else if (strcmp(w1, "nm_mp_multiplier") == 0)
         {
             map_config.nm_mp_multiplier = (float)atof(w2);
@@ -1161,6 +1186,10 @@ int32 map_config_read(const int8* cfgName)
         {
             map_config.player_mp_multiplier = (float)atof(w2);
         }
+        else if (strcmp(w1, "alter_ego_mp_multiplier") == 0)
+        {
+            map_config.alter_ego_mp_multiplier = (float)atof(w2);
+        }
         else if (strcmp(w1, "sj_mp_divisor") == 0)
         {
             map_config.sj_mp_divisor = (float)atof(w2);
@@ -1185,6 +1214,14 @@ int32 map_config_read(const int8* cfgName)
         {
             map_config.player_stat_multiplier = (float)atof(w2);
         }
+        else if (strcmp(w1, "alter_ego_stat_multiplier") == 0)
+        {
+            map_config.alter_ego_stat_multiplier = (float)atof(w2);
+        }
+        else if (strcmp(w1, "alter_ego_skill_multiplier") == 0)
+        {
+            map_config.alter_ego_skill_multiplier = (float)atof(w2);
+        }
         else if (strcmp(w1, "ability_recast_multiplier") == 0)
         {
             map_config.ability_recast_multiplier = (float)atof(w2);
@@ -1257,17 +1294,29 @@ int32 map_config_read(const int8* cfgName)
         {
             map_config.craft_amount_multiplier = (float)atof(w2);
         }
-        else if (strcmp(w1, "craft_day_matters") == 0)
+        else if (strcmp(w1, "craft_common_cap") == 0)
         {
-            map_config.craft_day_matters = atof(w2);
+            map_config.craft_common_cap = atoi(w2);
         }
-        else if (strcmp(w1, "craft_moonphase_matters") == 0)
+        else if (strcmp(w1, "craft_specialization_points") == 0)
         {
-            map_config.craft_moonphase_matters = atof(w2);
+            map_config.craft_specialization_points = atoi(w2);
         }
-        else if (strcmp(w1, "craft_direction_matters") == 0)
+        else if (strcmp(w1, "garden_day_matters") == 0)
         {
-            map_config.craft_direction_matters = atof(w2);
+            map_config.garden_day_matters = atof(w2);
+        }
+        else if (strcmp(w1, "garden_moonphase_matters") == 0)
+        {
+            map_config.garden_moonphase_matters = atof(w2);
+        }
+        else if (strcmp(w1, "garden_pot_matters") == 0)
+        {
+            map_config.garden_pot_matters = atof(w2);
+        }
+        else if (strcmp(w1, "garden_mh_aura_matters") == 0)
+        {
+            map_config.garden_mh_aura_matters = atof(w2);
         }
         else if (strcmp(w1, "mysql_host") == 0)
         {
@@ -1373,6 +1422,14 @@ int32 map_config_read(const int8* cfgName)
         {
             map_config.anticheat_jail_disable = atoi(w2);
         }
+        else if (strcmp(w1, "daily_tally_amount") == 0)
+        {
+            map_config.daily_tally_amount = atoi(w2);
+        }
+        else if (strcmp(w1, "daily_tally_limit") == 0)
+        {
+            map_config.daily_tally_limit = atoi(w2);
+        }
         else
         {
             ShowWarning(CL_YELLOW"Unknown setting '%s' in file %s\n" CL_RESET, w1, cfgName);