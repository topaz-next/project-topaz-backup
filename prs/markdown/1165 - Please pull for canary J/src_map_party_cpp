@@ -200,10 +200,18 @@ uint8 CParty::MemberCount(uint16 ZoneID)
 
     for (uint32 i = 0; i < members.size(); ++i)
     {
-        if (members.at(i)->getZone() == ZoneID)
+        auto* member = members.at(i);
+        if (member->getZone() == ZoneID)
         {
             count++;
         }
+        if (member->objtype == TYPE_PC)
+        {
+            auto* charMember = static_cast<CCharEntity*>(member);
+            std::for_each(charMember->PTrusts.begin(), charMember->PTrusts.end(), [&](CTrustEntity* trust) {
+                count++;
+            });
+        }
     }
     return count;
 }
@@ -238,10 +246,11 @@ void CParty::RemoveMember(CBattleEntity* PEntity)
 
     if (m_PLeader == PEntity)
     {
+        RemovePartyLeader(PEntity);
+
         // Remove their trusts
         CCharEntity* PChar = (CCharEntity*)PEntity;
         PChar->ClearTrusts();
-        RemovePartyLeader(PEntity);
     }
     else
     {
@@ -478,6 +487,11 @@ void CParty::AddMember(CBattleEntity* PEntity)
     PEntity->PParty = this;
     members.push_back(PEntity);
 
+    if (PEntity->objtype == TYPE_PC && this->members.size() > 1)
+    {
+        this->m_TimeLastMemberJoined = server_clock::now();
+    }
+
     if (m_PartyType == PARTY_PCS)
     {
         TPZ_DEBUG_BREAK_IF(PEntity->objtype != TYPE_PC);
@@ -733,6 +747,7 @@ void CParty::ReloadParty()
     else
     {
         RefreshFlags(info);
+        CBattleEntity* PLeader = GetLeader();
         //regular party
         for (uint8 i = 0; i < members.size(); ++i)
         {
@@ -742,7 +757,10 @@ void CParty::ReloadParty()
             PChar->PLatentEffectContainer->CheckLatentsPartyMembers(members.size());
             PChar->PLatentEffectContainer->CheckLatentsPartyAvatar();
             PChar->ReloadPartyDec();
-            PChar->pushPacket(new CPartyDefinePacket(this));
+            if (PLeader)
+            {
+                PChar->pushPacket(new CPartyDefinePacket(this, PChar->getZone() == PLeader->getZone()));
+            }
             //auto effects = std::make_unique<CPartyEffectsPacket>();
             uint8 j = 0;
             for (auto&& memberinfo : info)
@@ -772,13 +790,9 @@ void CParty::ReloadParty()
                     PChar->pushPacket(new CPartyMemberUpdatePacket(
                         memberinfo.id, (const int8*)memberinfo.name.c_str(),
                         memberinfo.flags, j, zoneid));
-                    //effects->AddMemberEffects(memberinfo.id);
                 }
                 j++;
             }
-
-
-            //PChar->pushPacket(effects.release());
         }
     }
 }
@@ -1161,6 +1175,11 @@ void CParty::SetPartyNumber(uint8 number)
     m_PartyNumber = number;
 }
 
+uint32 CParty::GetTimeLastMemberJoined()
+{
+    return (uint32)std::chrono::time_point_cast<std::chrono::seconds>(m_TimeLastMemberJoined).time_since_epoch().count();
+}
+
 void CParty::RefreshFlags(std::vector<partyInfo_t>& info)
 {
     for (auto&& memberinfo : info)