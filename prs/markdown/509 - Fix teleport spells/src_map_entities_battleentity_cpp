@@ -1254,7 +1254,7 @@ void CBattleEntity::OnCastFinished(CMagicState& state, action_t& action)
     action.recast = state.GetRecast();
     action.spellgroup = PSpell->getSpellGroup();
 
-    uint16 msg = 0;
+    uint16 msg = MSGBASIC_NONE;
 
     for (auto PTarget : PAI->TargetFind->m_targets)
     {
@@ -1267,13 +1267,13 @@ void CBattleEntity::OnCastFinished(CMagicState& state, action_t& action)
         actionTarget.speceffect = SPECEFFECT_NONE;
         actionTarget.animation = PSpell->getAnimationID();
         actionTarget.param = 0;
-        actionTarget.messageID = 0;
+        actionTarget.messageID = MSGBASIC_NONE;
 
         auto ce = PSpell->getCE();
         auto ve = PSpell->getVE();
 
         // Take all shadows
-        if (PSpell->canTargetEnemy() && (aoeType > 0 || (PSpell->getFlag() & SPELLFLAG_WIPE_SHADOWS)))
+        if (PSpell->canTargetEnemy() && (aoeType > SPELLAOE_NONE || (PSpell->getFlag() & SPELLFLAG_WIPE_SHADOWS)))
         {
             PTarget->StatusEffectContainer->DelStatusEffect(EFFECT_BLINK);
             PTarget->StatusEffectContainer->DelStatusEffect(EFFECT_COPY_IMAGE);
@@ -1285,7 +1285,7 @@ void CBattleEntity::OnCastFinished(CMagicState& state, action_t& action)
             && !(PSpell->getFlag() & SPELLFLAG_IGNORE_SHADOWS))
         {
             // take shadow
-            msg = 31;
+            msg = MSGBASIC_SHADOW_ABSORB;
             actionTarget.param = 1;
             ve = 0;
             ce = 0;
@@ -1296,9 +1296,10 @@ void CBattleEntity::OnCastFinished(CMagicState& state, action_t& action)
 
             // Remove Saboteur
             if (PSpell->getSkillType() == SKILLTYPE::SKILL_ENFEEBLING_MAGIC)
+            {
                 StatusEffectContainer->DelStatusEffect(EFFECT_SABOTEUR);
-
-            if (msg == 0)
+            }
+            if (msg == MSGBASIC_NONE)
             {
                 msg = PSpell->getMessage();
             }
@@ -1308,17 +1309,31 @@ void CBattleEntity::OnCastFinished(CMagicState& state, action_t& action)
             }
         }
 
-        if (actionTarget.animation == 122 && msg == 283) // Teleport spells don't target unqualified members
-        {
-            actionList.actionTargets.pop_back();
-            continue;
+        if (actionTarget.animation == 122)
+        { // Teleport spells don't target unqualified members
+            if (PSpell->getMessage() == MSGBASIC_NONE)
+            {
+                actionTarget.animation = 0; // stop target from going invisible
+                if (PTarget != PActionTarget)
+                {
+                    action.actionLists.pop_back();
+                }
+                else
+                { // set this message in anticipation of nobody having the gate crystal
+                    actionTarget.messageID = MSGBASIC_MAGIC_NO_EFFECT;
+                }
+                continue;
+            }
+            if (msg == MSGBASIC_MAGIC_TELEPORT && PTarget != PActionTarget)
+            { // reset the no effect message above if somebody has gate crystal
+                action.actionLists[0].actionTargets[0].messageID = MSGBASIC_NONE;
+            }
         }
-
         actionTarget.messageID = msg;
 
         state.ApplyEnmity(PTarget, ce, ve);
 
-        if (PTarget->objtype == TYPE_MOB && msg != 31) // If message isn't the shadow loss message, because I had to move this outside of the above check for it.
+        if (PTarget->objtype == TYPE_MOB && msg != MSGBASIC_SHADOW_ABSORB) // If message isn't the shadow loss message, because I had to move this outside of the above check for it.
         {
             luautils::OnMagicHit(this, PTarget, PSpell);
         }