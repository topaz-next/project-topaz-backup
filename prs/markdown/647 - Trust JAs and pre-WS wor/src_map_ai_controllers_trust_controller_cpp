@@ -21,6 +21,7 @@ along with this program.  If not, see http://www.gnu.org/licenses/
 
 #include "trust_controller.h"
 
+#include "../../ability.h"
 #include "../ai_container.h"
 #include "../../status_effect_container.h"
 #include "../../enmity_container.h"
@@ -34,7 +35,7 @@ along with this program.  If not, see http://www.gnu.org/licenses/
 
 CTrustController::CTrustController(CCharEntity* PChar, CTrustEntity* PTrust) : CMobController(PTrust)
 {
-    m_GambitsContainer = std::make_unique<CGambitsContainer>(PTrust);
+    m_GambitsContainer = std::make_unique<gambits::CGambitsContainer>(PTrust);
 }
 
 CTrustController::~CTrustController()
@@ -209,10 +210,16 @@ void CTrustController::DoRoamTick(time_point tick)
 
 bool CTrustController::Ability(uint16 targid, uint16 abilityid)
 {
+    if (static_cast<CMobEntity*>(POwner)->PRecastContainer->HasRecast(RECAST_ABILITY, abilityid + 16, 0))
+    {
+        return false;
+    }
+
     if (POwner->PAI->CanChangeState())
     {
         return POwner->PAI->Internal_Ability(targid, abilityid);
     }
+
     return false;
 }
 