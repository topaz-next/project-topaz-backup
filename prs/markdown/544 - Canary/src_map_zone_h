@@ -509,6 +509,7 @@ class CBaseEntity;
 class CCharEntity;
 class CNpcEntity;
 class CBattleEntity;
+class CTrustEntity;
 class CTreasurePool;
 class CZoneEntities;
 
@@ -555,6 +556,7 @@ class CZone
     virtual void    SpawnMOBs(CCharEntity* PChar);                                  // отображаем MOBs в зоне
     virtual void    SpawnPETs(CCharEntity* PChar);                                  // отображаем PETs в зоне
     virtual void    SpawnNPCs(CCharEntity* PChar);                                  // отображаем NPCs в зоне
+    virtual void    SpawnTRUSTs(CCharEntity* PChar);                                // Display TRUSTs in zone
     virtual void    SpawnMoogle(CCharEntity* PChar);                                // отображаем Moogle в MogHouse
     virtual void    SpawnTransport(CCharEntity* PChar);                             // отображаем транспорт
     void            SavePlayTime();
@@ -567,7 +569,10 @@ class CZone
     virtual void    InsertNPC(CBaseEntity* PNpc);                                   // добавляем в зону npc
     virtual void    InsertMOB(CBaseEntity* PMob);                                   // добавляем в зону mob
     virtual void    InsertPET(CBaseEntity* PPet);                                   // добавляем в зону pet
+    virtual void    InsertTRUST(CBaseEntity* PTrust);                               // Add a trust to the zone
+
     virtual void    DeletePET(CBaseEntity* PPet);                                   // derefs the pet's ID from this zone
+    virtual void    DeleteTRUST(CBaseEntity* PTrust);
 
     virtual void    FindPartyForMob(CBaseEntity* PEntity);                          // ищем группу для монстра
     virtual void    TransportDepart(uint16 boundary, uint16 zone);                  // транспотр отправляется, необходимо собрать пассажиров
@@ -587,6 +592,8 @@ class CZone
     virtual void    ForEachCharInstance(CBaseEntity* PEntity, std::function<void(CCharEntity*)> func);
     virtual void    ForEachMob(std::function<void(CMobEntity*)> func);
     virtual void    ForEachMobInstance(CBaseEntity* PEntity, std::function<void(CMobEntity*)> func);
+    virtual void    ForEachTrust(std::function<void(CTrustEntity*)> func);
+    virtual void    ForEachTrustInstance(CBaseEntity* PEntity, std::function<void(CTrustEntity*)> func);
     virtual void    ForEachNpc(std::function<void(CNpcEntity*)> func);
 
     CZone(ZONEID ZoneID, REGIONTYPE RegionID, CONTINENTTYPE ContinentID);