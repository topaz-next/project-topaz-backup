@@ -374,6 +374,11 @@ void SmallPacket0x00D(map_session_data_t* session, CCharEntity* PChar, CBasicPac
         PChar->updatemask |= UPDATE_HP;
     }
 
+    if (!PChar->PTrusts.empty())
+    {
+        PChar->ClearTrusts();
+    }
+
     if (PChar->status == STATUS_SHUTDOWN)
     {
         if (PChar->PParty != nullptr)
@@ -540,6 +545,7 @@ void SmallPacket0x015(map_session_data_t* session, CCharEntity* PChar, CBasicPac
 
         PChar->loc.zone->SpawnMOBs(PChar);
         PChar->loc.zone->SpawnPETs(PChar);
+        PChar->loc.zone->SpawnTRUSTs(PChar);
 
         if (PChar->PWideScanTarget != nullptr)
         {
@@ -814,6 +820,7 @@ void SmallPacket0x01A(map_session_data_t* session, CCharEntity* PChar, CBasicPac
             PChar->loc.zone->SpawnPCs(PChar);
             PChar->loc.zone->SpawnNPCs(PChar);
             PChar->loc.zone->SpawnMOBs(PChar);
+            PChar->loc.zone->SpawnTRUSTs(PChar);
         }
     }
     break;
@@ -2520,10 +2527,12 @@ void SmallPacket0x050(map_session_data_t* session, CCharEntity* PChar, CBasicPac
     uint8 containerID = data.ref<uint8>(0x06);     // container id
 
     if (containerID != LOC_INVENTORY && containerID != LOC_WARDROBE && containerID != LOC_WARDROBE2 && containerID != LOC_WARDROBE3 && containerID != LOC_WARDROBE4)
+    {
         if (equipSlotID != 16 && equipSlotID != 17)
             return;
         else if (containerID != LOC_MOGSATCHEL && containerID != LOC_MOGSACK && containerID != LOC_MOGCASE)
             return;
+    }
 
     charutils::EquipItem(PChar, slotID, equipSlotID, containerID); //current
     charutils::SaveCharEquip(PChar);
@@ -2712,9 +2721,9 @@ void SmallPacket0x05A(map_session_data_t* session, CCharEntity* PChar, CBasicPac
 
 void SmallPacket0x05B(map_session_data_t* session, CCharEntity* PChar, CBasicPacket data)
 {
-    auto CharID = data.ref<uint32>(0x04);
+    //auto CharID = data.ref<uint32>(0x04);
     auto Result = data.ref<uint32>(0x08);
-    auto ZoneID = data.ref<uint16>(0x10);
+    //auto ZoneID = data.ref<uint16>(0x10);
     auto EventID = data.ref<uint16>(0x12);
 
     PrintPacket(data);
@@ -2749,9 +2758,9 @@ void SmallPacket0x05B(map_session_data_t* session, CCharEntity* PChar, CBasicPac
 
 void SmallPacket0x05C(map_session_data_t* session, CCharEntity* PChar, CBasicPacket data)
 {
-    auto CharID = data.ref<uint32>(0x10);
+    //auto CharID = data.ref<uint32>(0x10);
     auto Result = data.ref<uint32>(0x14);
-    auto ZoneID = data.ref<uint16>(0x18);
+    //auto ZoneID = data.ref<uint16>(0x18);
 
     auto EventID = data.ref<uint16>(0x1A);
 
@@ -3578,7 +3587,7 @@ void SmallPacket0x076(map_session_data_t* session, CCharEntity* PChar, CBasicPac
     else
     {
         //previous CPartyDefine was dropped or otherwise didn't work?
-        PChar->pushPacket(new CPartyDefinePacket(nullptr));
+        PChar->pushPacket(new CPartyDefinePacket(nullptr, false));
     }
     return;
 }