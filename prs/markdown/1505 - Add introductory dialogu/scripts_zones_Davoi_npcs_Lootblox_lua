@@ -37,23 +37,24 @@ local maps = {
 function onTrade(player, npc, trade)
     local gil = trade:getGil()
     local count = trade:getItemCount()
+    local introMask = player:getCharVar("currencyGoblinIntro")
 
-    if (player:hasKeyItem(tpz.ki.VIAL_OF_SHROUDED_SAND)) then
+    if player:hasKeyItem(tpz.ki.VIAL_OF_SHROUDED_SAND) then
 
         -- buy prismatic hourglass
-        if (gil == PRISMATIC_HOURGLASS_COST and count == 1 and not player:hasKeyItem(tpz.ki.PRISMATIC_HOURGLASS)) then
+        if gil == PRISMATIC_HOURGLASS_COST and count == 1 and not player:hasKeyItem(tpz.ki.PRISMATIC_HOURGLASS) then
             player:startEvent(134)
 
         -- return timeless hourglass for refund
-        elseif (count == 1 and trade:hasItemQty(TIMELESS_HOURGLASS, 1)) then
+        elseif count == 1 and trade:hasItemQty(TIMELESS_HOURGLASS, 1) then
             player:startEvent(153)
 
         -- currency exchanges
-        elseif (count == CURRENCY_EXCHANGE_RATE and trade:hasItemQty(currency[1], CURRENCY_EXCHANGE_RATE)) then
+        elseif count == CURRENCY_EXCHANGE_RATE and trade:hasItemQty(currency[1], CURRENCY_EXCHANGE_RATE) then
             player:startEvent(135, CURRENCY_EXCHANGE_RATE)
-        elseif (count == CURRENCY_EXCHANGE_RATE and trade:hasItemQty(currency[2], CURRENCY_EXCHANGE_RATE)) then
+        elseif count == CURRENCY_EXCHANGE_RATE and trade:hasItemQty(currency[2], CURRENCY_EXCHANGE_RATE) then
             player:startEvent(136, CURRENCY_EXCHANGE_RATE)
-        elseif (count == 1 and trade:hasItemQty(currency[3], 1)) then
+        elseif count == 1 and trade:hasItemQty(currency[3], 1) then
             player:startEvent(138, currency[3], currency[2], CURRENCY_EXCHANGE_RATE)
 
         -- shop
@@ -63,7 +64,7 @@ function onTrade(player, npc, trade)
             for i=1, 13, 2 do
                 price = shop[i]
                 item = shop[i+1]
-                if (count == price and trade:hasItemQty(currency[2], price)) then
+                if count == price and trade:hasItemQty(currency[2], price) then
                     player:setLocalVar("hundoItemBought", item)
                     player:startEvent(137, currency[2], price, item)
                     break
@@ -75,41 +76,64 @@ function onTrade(player, npc, trade)
 end
 
 function onTrigger(player, npc)
-    if (player:hasKeyItem(tpz.ki.VIAL_OF_SHROUDED_SAND)) then
+    local introMask = player:getCharVar("currencyGoblinIntro")
+
+    if
+        utils.mask.getBit(introMask, 0) and
+        not utils.mask.getBit(introMask, 4) and
+        not player:hasKeyItem(tpz.ki.PRISMATIC_HOURGLASS)
+    then
+        -- Introduces Prismatic Hourglass
+        player:startEvent(131, TIMELESS_HOURGLASS, TIMELESS_HOURGLASS_COST, tpz.ki.PRISMATIC_HOURGLASS, PRISMATIC_HOURGLASS_COST)
+
+    elseif
+        utils.mask.getBit(introMask, 4) and
+        not utils.mask.getBit(introMask, 1)
+    then
+        -- Introduces Currency
+        player:startEvent(132, currency[1], CURRENCY_EXCHANGE_RATE, currency[2], CURRENCY_EXCHANGE_RATE, currency[3], currency[3], CURRENCY_EXCHANGE_RATE, currency[2])
+
+    elseif player:hasKeyItem(tpz.ki.VIAL_OF_SHROUDED_SAND) then
         player:startEvent(133, currency[1], CURRENCY_EXCHANGE_RATE, currency[2], CURRENCY_EXCHANGE_RATE, currency[3], PRISMATIC_HOURGLASS_COST, TIMELESS_HOURGLASS, TIMELESS_HOURGLASS_COST)
+    
     else
         player:startEvent(130)
     end
 end
 
 function onEventUpdate(player, csid, option)
-    if (csid == 133) then
+
+    -- currency gets re-ordered in introduction
+    if csid == 132 then
+        player:updateEvent(currency[3], currency[2], CURRENCY_EXCHANGE_RATE)
+
+    elseif csid == 133 then
 
         -- asking about hourglasses
-        if (option == 1) then
-            if (not player:hasItem(TIMELESS_HOURGLASS)) then
+        if option == 1 then
+            if not player:hasItem(TIMELESS_HOURGLASS) then
                 -- must figure out what changes here to prevent the additional dialog
                 -- player:updateEvent(?)
             end
 
         -- shop
-        elseif (option == 2) then
+        elseif option == 2 then
             player:updateEvent(unpack(shop, 1, 8))
-        elseif (option == 3) then
+        elseif option == 3 then
             player:updateEvent(unpack(shop, 9, 14))
 
         -- offer to trade down from a 10k
-        elseif (option == 10) then
+        elseif option == 10 then
             player:updateEvent(currency[3], currency[2], CURRENCY_EXCHANGE_RATE)
 
         -- main menu (param1 = dynamis map bitmask, param2 = gil)
-        elseif (option == 11) then
+        elseif option == 11 then
             player:updateEvent(getDynamisMapList(player), player:getGil())
 
         -- maps
-        elseif (maps[option] ~= nil) then
+        elseif maps[option] ~= nil then
             local price = maps[option]
-            if (price > player:getGil()) then
+            if price > player:getGil() then
                 player:messageSpecial(ID.text.NOT_ENOUGH_GIL)
             else
                 player:delGil(price)
@@ -123,22 +147,36 @@ function onEventUpdate(player, csid, option)
 end
 
 function onEventFinish(player, csid, option)
+    local introMask = player:getCharVar("currencyGoblinIntro")
+
+    if csid == 131 then
+        -- make prismatic hourglass introduction unavailable to the other goblins
+        player:setCharVar("currencyGoblinIntro", utils.mask.setBit(introMask, 4, true))
+
+    elseif csid == 132 then
+        player:setCharVar("currencyGoblinIntro", utils.mask.setBit(introMask, 1, true))
+        -- remove if this was the last of the three goblins that introduced currency
+        if utils.mask.isFull(player:getCharVar("currencyGoblinIntro"), 5) then
+            player:setCharVar("currencyGoblinIntro", 0)
+        end
 
     -- bought prismatic hourglass
-    if (csid == 134) then
+    elseif csid == 134 then
         player:tradeComplete()
         player:addKeyItem(tpz.ki.PRISMATIC_HOURGLASS)
         player:messageSpecial(ID.text.KEYITEM_OBTAINED, tpz.ki.PRISMATIC_HOURGLASS)
+        -- player may trade right away before introduction, make sure this gets set
+        player:setCharVar("currencyGoblinIntro", utils.mask.setBit(introMask, 4, true))
 
     -- refund timeless hourglass
-    elseif (csid == 153) then
+    elseif csid == 153 then
         player:tradeComplete()
         player:addGil(TIMELESS_HOURGLASS_COST)
         player:messageSpecial(ID.text.GIL_OBTAINED, TIMELESS_HOURGLASS_COST)
 
     -- singles to hundos
-    elseif (csid == 135) then
-        if (player:getFreeSlotsCount() == 0) then
+    elseif csid == 135 then
+        if player:getFreeSlotsCount() == 0 then
             player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, currency[2])
         else
             player:tradeComplete()
@@ -147,8 +185,8 @@ function onEventFinish(player, csid, option)
         end
 
     -- hundos to 10k pieces
-    elseif (csid == 136) then
-        if (player:getFreeSlotsCount() == 0) then
+    elseif csid == 136 then
+        if player:getFreeSlotsCount() == 0 then
             player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, currency[3])
         else
             player:tradeComplete()
@@ -159,12 +197,12 @@ function onEventFinish(player, csid, option)
     -- 10k pieces to hundos
     elseif (csid == 138) then
         local slotsReq = math.ceil(CURRENCY_EXCHANGE_RATE / 99)
-        if (player:getFreeSlotsCount() < slotsReq) then
+        if player:getFreeSlotsCount() < slotsReq then
             player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, currency[2])
         else
             player:tradeComplete()
             for i=1, slotsReq do
-                if (i < slotsReq or (CURRENCY_EXCHANGE_RATE % 99) == 0) then
+                if i < slotsReq or (CURRENCY_EXCHANGE_RATE % 99) == 0 then
                     player:addItem(currency[2], CURRENCY_EXCHANGE_RATE)
                 else
                     player:addItem(currency[2], CURRENCY_EXCHANGE_RATE % 99)
@@ -174,9 +212,9 @@ function onEventFinish(player, csid, option)
         end
 
     -- bought item from shop
-    elseif (csid == 137) then
+    elseif csid == 137 then
         local item = player:getLocalVar("hundoItemBought")
-        if (player:getFreeSlotsCount() == 0) then
+        if player:getFreeSlotsCount() == 0 then
             player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, item)
         else
             player:tradeComplete()