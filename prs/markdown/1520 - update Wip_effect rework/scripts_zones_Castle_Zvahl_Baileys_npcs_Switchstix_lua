@@ -1,6 +1,6 @@
 -----------------------------------
 -- Area: Castle Zvahl Baileys
---   NPC: Switchstix
+-- NPC: Switchstix
 -- Type: Standard NPC
 -- !pos 386.091 -13 -17.399 161
 -----------------------------------
@@ -9,291 +9,299 @@ require("scripts/globals/keyitems")
 require("scripts/globals/status")
 -----------------------------------
 
-local relics = {
-    -- Current Stage, Item 1, Item 2, Item 3, # of items, currency type, currency amount, stage #, cs param 8 (manages turn in cutscenes (1-3) and Aegis (4-6))
-    -- The various parameters are stored in a subarray for ease of use with return.
-    18260, { 1460,  1459,   665,  4,  1456,   4,  1,  1}, -- Spharai
-    18261, {16390, 16392, 16396,  4,  1453,  14,  2,  2},
-    18262, { 1556,     0,     0,  2,  1450,  61,  3,  3},
-    18263, { 1571,  1589,     0,  0,  1457,   1,  4,  3},
-
-    18266, { 4246,   747,  4166,  4,  1456,   4,  1,  1}, -- Mandau
-    18267, {16449, 16496, 16452,  4,  1453,  14,  2,  2},
-    18268, { 1557,     0,     0,  2,  1450,  61,  3,  3},
-    18269, { 1572,  1589,     0,  0,  1457,   1,  4,  3},
-
-    18272, { 1460,   763,   931,  4,  1453,   4,  1,  1}, -- Excalibur
-    18273, {16535, 16537, 16542,  4,  1456,  14,  2,  2},
-    18274, { 1558,     0,     0,  2,  1450,  61,  3,  3},
-    18275, { 1573,  1589,     0,  0,  1454,   1,  4,  3},
-
-    18278, { 1459,   655,   746,  4,  1453,   4,  1,  1}, -- Ragnarok
-    18279, {16583, 16584, 16585,  4,  1450,  14,  2,  2},
-    18280, { 1559,     0,     0,  2,  1456,  61,  3,  3},
-    18281, { 1574,  1589,     0,  0,  1454,   1,  4,  3},
-
-    18284, { 1312,  1463, 13060,  4,  1450,   3,  1,  1}, -- Guttler
-    18285, {16657, 16658, 16659,  4,  1453,  14,  2,  2},
-    18286, { 1560,     0,     0,  2,  1456,  60,  3,  3},
-    18287, { 1575,  1589,     0,  0,  1451,   1,  4,  3},
-
-    18290, { 1461,   658,   720,  4,  1456,   3,  1,  1}, -- Bravura
-    18291, {16704, 16705, 16724,  4,  1450,  16,  2,  2},
-    18292, { 1561,     0,     0,  2,  1453,  60,  3,  3},
-    18293, { 1576,  1589,     0,  0,  1457,   1,  4,  3},
-
-    18296, { 1462,   747,  1294,  4,  1450,   4,  1,  1}, -- Gungnir
-    18297, {16834, 16836, 16841,  4,  1456,  16,  2,  2},
-    18298, { 1563,     0,     0,  2,  1453,  61,  3,  3},
-    18299, { 1578,  1589,     0,  0,  1451,   1,  4,  3},
-
-    18302, { 1458,  1117, 13208,  4,  1450,   5,  1,  1}, -- Apocalypse
-    18303, {16774, 16794, 16777,  4,  1453,  16,  2,  2},
-    18304, { 1562,     0,     0,  2,  1456,  62,  3,  3},
-    18305, { 1577,  1589,     0,  0,  1451,   1,  4,  3},
-
-    18308, { 1467,  1276,  1278,  4,  1456,   4,  1,  1}, -- Kikoku
-    18309, {16900, 16903, 16902,  4,  1450,  16,  2,  2},
-    18310, { 1564,     0,     0,  2,  1453,  61,  3,  3},
-    18311, { 1579,  1589,     0,  0,  1457,   1,  4,  3},
-
-    18314, { 1467,  1409,   657,  4,  1453,   3,  1,  1}, -- Amanomurakumo
-    18315, {16966, 16967, 16972,  4,  1450,  15,  2,  2},
-    18316, { 1565,     0,     0,  2,  1456,  60,  3,  3},
-    18317, { 1580,  1589,     0,  0,  1454,   1,  4,  3},
-
-    18320, { 1461,   746,   830,  4,  1453,   5,  1,  1}, -- Mjollnir
-    18321, {17044, 17080, 17043,  4,  1456,  16,  2,  2},
-    18322, { 1566,     0,     0,  2,  1450,  62,  3,  3},
-    18323, { 1581,  1589,     0,  0,  1454,   1,  4,  3},
-
-    18326, { 1462,  1271,  1415,  4,  1450,   5,  1,  1}, -- Claustrum
-    18327, {17088, 17090, 17092,  4,  1456,  16,  2,  2},
-    18328, { 1567,     0,     0,  2,  1453,  62,  3,  3},
-    18329, { 1582,  1589,     0,  0,  1451,   1,  4,  3},
-
-    18332, { 1468,   830,   654,  4,  1456,   5,  1,  1}, -- Annihilator
-    18333, {17248, 17251, 17259,  4,  1450,  15,  2,  2},
-    18334, { 1570,     0,     0,  2,  1453,  62,  3,  3},
-    18335, { 1585,  1589,     0,  0,  1457,   1,  4,  3},
-
-    18338, { 1458,  1463, 13232,  4,  1450,   3,  1,  1}, -- Gjallarhorn
-    18339, {17352, 17351, 17362,  4,  1456,  14,  2,  2},
-    18340, { 1569,     0,     0,  2,  1453,  60,  3,  3},
-    18341, { 1584,  1589,     0,  0,  1451,   1,  4,  3},
-
-    18344, {  883,  1462,   932,  4,  1453,   4,  1,  1}, -- Yoichinoyumi
-    18345, {17161, 17164, 18142,  4,  1453,  15,  2,  2},
-    18346, { 1568,     0,     0,  2,  1450,  61,  3,  3},
-    18347, { 1583,  1589,     0,  0,  1454,   1,  4,  3},
-
-    15066, {  875,   668,   720,  4,     0,   1,  1,  4}, -- Aegis
-    15067, {12301, 12295, 12387,  4,     0,   4,  2,  5},
-    15068, { 1821,     0,     0,  2,     0,  20,  3,  6},
-    15069, { 1822,  1589,     0,  0,  1454,   1,  4,  6}
+local requiredItems = 1
+local currencyType = 2
+local currencyAmount = 3
+local stageNumber = 4
+local csParam = 5
+
+local currency =
+{
+    BYNE_100 = 1456,
+    BYNE_10000 = 1457,
+    SILVER_100 = 1453,
+    SILVER_10000 = 1454,
+    SHELL_100 = 1450,
+    SHELL_10000 = 1451,
 }
 
-function hasRelic(entity, checktype)
-    -- Type 1 == Player is triggering NPC
-    -- Type 2 == Player is trading an item
+local relics =
+{
+    -- Spharai
+    [18260] = { { 1460, 1459, 665 }, currency.BYNE_100, 4, 1, 1 }, -- Relic Knuckles
+    [18261] = { { 16390, 16392, 16396 }, currency.SILVER_100, 14, 2, 2 }, -- Militant Knuckles
+    [18262] = { { 1556 }, currency.SHELL_100, 61, 3, 3 }, -- Dynamis Knuckles
+    [18263] = { { 1571, 1589 }, currency.BYNE_10000, 1, 4, 3 }, -- Caestus
+
+    -- Mandau
+    [18266] = { { 4246, 747, 4166 }, currency.BYNE_100, 4, 1, 1 }, -- Relic Dagger
+    [18267] = { { 16449, 16496, 16452 }, currency.SILVER_100, 14, 2, 2 }, -- Malefic Dagger
+    [18268] = { { 1557 }, currency.SHELL_100, 61, 3, 3 }, -- Dynamis Dagger
+    [18269] = { { 1572, 1589 }, currency.BYNE_10000, 1, 4, 3 }, -- Batardeau
+
+    -- Excalibur
+    [18272] = { { 1460, 763, 931 }, currency.SILVER_100, 4, 1, 1 }, -- Relic Sword
+    [18273] = { { 16535, 16537, 16542 }, currency.BYNE_100, 14, 2, 2 }, -- Glyptic Sword
+    [18274] = { { 1558 }, currency.SHELL_100, 61, 3, 3 }, -- Dynamis Sword
+    [18275] = { { 1573, 1589 }, currency.SILVER_10000, 1, 4, 3 }, -- Caliburn
+
+    -- Ragnarok
+    [18278] = { { 1459, 655, 746 }, currency.SILVER_100, 4, 1, 1 }, -- Relic Blade
+    [18279] = { { 16583, 16584, 16585 }, currency.SHELL_100, 14, 2, 2 }, -- Gilded Blade
+    [18280] = { { 1559 }, currency.BYNE_100, 61, 3, 3 }, -- Dynamis Blade
+    [18281] = { { 1574, 1589 }, currency.SILVER_10000, 1, 4, 3 }, -- Valhalla
+
+    -- Guttler
+    [18284] = { { 1312, 1463, 13060 }, currency.SHELL_100, 3, 1, 1 }, -- Relic Axe
+    [18285] = { { 16657, 16658, 16659 }, currency.SILVER_100, 14, 2, 2 }, -- Leonine Axe
+    [18286] = { { 1560 }, currency.BYNE_100, 60, 3, 3 }, -- Dynamis Axe
+    [18287] = { { 1575, 1589 }, currency.SHELL_10000, 1, 4, 3 }, -- Ogre Killer
+
+    -- Bravura
+    [18290] = { { 1461, 658, 720 }, currency.BYNE_100, 3, 1, 1 }, -- Relic Bhuj
+    [18291] = { { 16704, 16705, 16724 }, currency.SHELL_100, 16, 2, 2 }, -- Agonal Bhuj
+    [18292] = { { 1561 }, currency.SILVER_100, 60, 3, 3 }, -- Dynamis Bhuj
+    [18293] = { { 1576, 1589 }, currency.BYNE_10000, 1, 4, 3 }, -- Abaddon Killer
+
+    -- Gungnir
+    [18296] = { { 1462, 747, 1294 }, currency.SHELL_100, 4, 1, 1 }, -- Relic Lance
+    [18297] = { { 16834, 16836, 16841 }, currency.BYNE_100, 16, 2, 2 }, -- Hotspur Lance
+    [18298] = { { 1563 }, currency.SILVER_100, 61, 3, 3 }, -- Dynamis Lance
+    [18299] = { { 1578, 1589 }, currency.SHELL_10000, 1, 4, 3 }, -- Gae Assail
+
+    -- Apocalypse
+    [18302] = { { 1458, 1117, 13208 }, currency.SHELL_100, 5, 1, 1 }, -- Relic Scythe
+    [18303] = { { 16774, 16794, 16777 }, currency.SILVER_100, 16, 2, 2 }, -- Memento Scythe
+    [18304] = { { 1562 }, currency.BYNE_100, 62, 3, 3 }, -- Dynamis Scythe
+    [18305] = { { 1577, 1589 }, currency.SHELL_10000, 1, 4, 3 }, -- Bec De Faucon
+
+    -- Kikoku
+    [18308] = { { 1467, 1276, 1278 }, currency.BYNE_100, 4, 1, 1 }, -- Ihintanto
+    [18309] = { { 16900, 16903, 16902 }, currency.SHELL_100, 16, 2, 2 }, -- Mimizuku
+    [18310] = { { 1564 }, currency.SILVER_100, 61, 3, 3 }, -- Rogetsu
+    [18311] = { { 1579, 1589 }, currency.BYNE_10000, 1, 4, 3 }, -- Yoshimitsu
+
+    -- Amanomurakumo
+    [18314] = { { 1467, 1409, 657 }, currency.SILVER_100, 3, 1, 1 }, -- Ito
+    [18315] = { { 16966, 16967, 16972 }, currency.SHELL_100, 15, 2, 2 }, -- Hayatemaru
+    [18316] = { { 1565 }, currency.BYNE_100, 60, 3, 3 }, -- Oboromaru
+    [18317] = { { 1580, 1589 }, currency.SILVER_10000, 1, 4, 3 }, -- Totsukanotsurugi
+
+    -- Mjollnir
+    [18320] = { { 1461, 746, 830 }, currency.SILVER_100, 5, 1, 1 }, -- Relic Maul
+    [18321] = { { 17044, 17080, 17043 }, currency.BYNE_100, 16, 2, 2 }, -- Battering Maul
+    [18322] = { { 1566 }, currency.SHELL_100, 62, 3, 3 }, -- Dynamis Maul
+    [18323] = { { 1581, 1589 }, currency.SILVER_10000, 1, 4, 3 }, -- Gullintani
+
+    -- Claustrum
+    [18326] = { { 1462, 1271, 1415 }, currency.SHELL_100, 5, 1, 1 }, -- Relic Staff
+    [18327] = { { 17088, 17090, 17092 }, currency.BYNE_100, 16, 2, 2 }, -- Sage's Staff
+    [18328] = { { 1567 }, currency.SILVER_100, 62, 3, 3 }, -- Dynamis Staff
+    [18329] = { { 1582, 1589 }, currency.SHELL_10000, 1, 4, 3 }, -- Thyrus
+
+    -- Annihilator
+    [18332] = { { 1468, 830, 654 }, currency.BYNE_100, 5, 1, 1 }, -- Relic Gun
+    [18333] = { { 17248, 17251, 17259 }, currency.SHELL_100, 15, 2, 2 }, -- Marksman Gun
+    [18334] = { { 1570 }, currency.SILVER_100, 62, 3, 3 }, -- Dynamis Gun
+    [18335] = { { 1585, 1589 }, currency.BYNE_10000, 1, 4, 3 }, -- Ferdinand
+
+    -- Gjallarhorn
+    [18338] = { { 1458, 1463, 13232 }, currency.SHELL_100, 3, 1, 1 }, -- Relic Horn
+    [18339] = { { 17352, 17351, 17362 }, currency.BYNE_100, 14, 2, 2 }, -- Pyrrhic Horn
+    [18340] = { { 1569 }, currency.SILVER_100, 60, 3, 3 }, -- Dynamis Horn
+    [18341] = { { 1584, 1589 }, currency.SHELL_10000, 1, 4, 3 }, -- Milennium Horn
+
+    -- Yoichinoyumi
+    [18344] = { { 883, 1462, 932 }, currency.SILVER_100, 4, 1, 1 }, -- Relic Bow
+    [18345] = { { 17161, 17164, 18142 }, currency.SILVER_100, 15, 2, 2 }, -- Wolver Bow
+    [18346] = { { 1568 }, currency.SHELL_100, 61, 3, 3 }, -- Dynamis Bow
+    [18347] = { { 1583, 1589 }, currency.SILVER_10000, 1, 4, 3 }, -- Futatokoroto
+
+    -- Aegis
+    [15066] = { { 875, 668, 720 }, 0, 1, 1, 4 }, -- Relic Shield
+    [15067] = { { 12301, 12295, 12387 }, 0, 4, 2, 5 }, -- Bulwark Shield
+    [15068] = { { 1821 }, 0, 20, 3, 6 }, -- Dynamis Shield
+    [15069] = { { 1822, 1589 }, currency.SILVER_10000, 1, 4, 6 }, -- Ancile
+}
 
-    if checktype == 1 then
-        for i=1, #relics, 2 do -- Step through the array grabbing every second (2 value, and see if it matches that itemid.
-            if (entity:hasItem(relics[i], tpz.inv.INVENTORY)) then -- Specifically checks inventory, so that items in other containers (mog safe, satchel, etc) will be ignored.
-                return relics[i]
+function hasRelic(entity, isTrade)
+    if isTrade then
+        for key, value in pairs(relics) do
+            if (entity:hasItemQty(key, 1)) then
+                return key
             end
         end
-    elseif checktype == 2 then
-        for i=1, #relics, 2 do
-            if (entity:hasItemQty(relics[i], 1)) then
-                return relics[i]
+        return nil
+    else
+        for key, value in pairs(relics) do
+            if (entity:hasItem(key, tpz.inv.INVENTORY)) then
+                return key
             end
         end
+        return nil
     end
 end
 
-function getRelicParameters(itemid)
-    for i=1, #relics, 2 do
-        if (relics[i] == itemid) then -- If you've found the right itemid, return the array stored in the next value.
-            return relics[i + 1]
+function tradeHasRequiredCurrency(trade, currentRelic)
+    local relic = relics[currentRelic]
+
+    if currentRelic == 15066 or currentRelic == 15067 or currentRelic == 15068 then
+        if currentRelic == 15066 and trade:getItemCount() == 3 then
+            return trade:hasItemQty(currency.BYNE_100, 1) and trade:hasItemQty(currency.SILVER_100, 1) and trade:hasItemQty(currency.SHELL_100, 1)
+        elseif currentRelic == 15067 and trade:getItemCount() == 12 then
+            return trade:hasItemQty(currency.BYNE_100, 4) and trade:hasItemQty(currency.SILVER_100, 4) and trade:hasItemQty(currency.SHELL_100, 4)
+        elseif currentRelic == 15068 and trade:getItemCount() == 60 then
+            return trade:hasItemQty(currency.BYNE_100, 20) and trade:hasItemQty(currency.SILVER_100, 20) and trade:hasItemQty(currency.SHELL_100, 20)
+        else
+            return false
+        end
+    else
+        if trade:getItemCount() ~= relic[currencyAmount] then
+            return false
+        else
+            return trade:hasItemQty(relic[currencyType], relic[currencyAmount])
         end
     end
 end
 
-function onTrade(player, npc, trade)
-    local itemid = hasRelic(trade, 2)
-    local eventParams = {} -- item1, item2, item3, num_items, currencytype, currencyamount, finalvar
-    local currentRelic = player:getCharVar("RELIC_IN_PROGRESS") -- Stores which item has been taken from the player
-    local relicWait = player:getCharVar("RELIC_DUE_AT") -- Stores time that relic can be retrieved after
-    local relicDupe = player:getCharVar("RELIC_MAKE_ANOTHER") -- Stores a value that the player has acknowledged they can't hold the item they want to make yet they're making it anyway.
-    local count = trade:getItemCount()
-    local gil = trade:getGil()
-    local tradeOK = false
-
-    -- Starting a stage upgrade.
-    -- No relics in progress, found a relic in the trade with other items, and (doesn't already own next stage, or (owns it and has acknowledged this is a bad idea))
-    if (currentRelic == 0 and itemid ~= nil and gil == 0 and count > 1 and (player:hasItem(itemid+1) == false or (player:hasItem(itemid+1) == true and relicDupe == 1))) then
-        eventParams = getRelicParameters(itemid)
-
-        -- Stage 1->2 or 2->3, 3 items + relic itself
-        if (count == eventParams[4] and trade:hasItemQty(eventParams[1], 1) and trade:hasItemQty(eventParams[2], 1) and
-        trade:hasItemQty(eventParams[3], 1) and trade:hasItemQty(itemid, 1)) then
-            tradeOK = true
-
-        -- Stage 3->4, just check for attestation + relic itself
-        elseif (count == eventParams[4] and trade:hasItemQty(eventParams[1], 1) and trade:hasItemQty(itemid, 1)) then
-            tradeOK = true
-
-        -- Stage 4->5, Shard + Necropschye + relic itself
-        elseif (count == eventParams[4] and trade:hasItemQty(eventParams[1], 1) and trade:hasItemQty(eventParams[2], 1) and trade:hasItemQty(itemid, 1)) then
-            tradeOK = true
-        end
-
-        -- Trade is valid, so set vars, complete trade, and give a CS
-        if tradeOK == true then
-            player:setCharVar("RELIC_IN_PROGRESS", itemid)
-            player:tradeComplete()
-            player:startEvent(11, itemid, eventParams[1], eventParams[2], eventParams[3], eventParams[5], eventParams[6], 0, eventParams[8])
+function tradeHasRequiredMaterials(trade, relicId, requiredItems)
+    if trade:getItemCount() ~= (#requiredItems + 1) then
+        return false
+    else
+        if not trade:hasItemQty(relicId, 1) then
+            return false
         end
-
-    -- Already owns the next stage and hasn't acknowledged this is a bad idea yet.
-    elseif (itemid ~= nil and relicDupe ~= 1 and player:hasItem(itemid+1) == true) then
-        player:startEvent(20, itemid)
-
-    -- Trading a new relic with one already in progress.  Offer cancellation.
-    elseif (currentRelic ~= 0 and itemid ~= nil) then
-        player:startEvent(87)
-
-    -- Has turned in a relic and items, has not turned in currency (no wait), so they must be bringing currency, but not 10, 000 piece
-    elseif (currentRelic ~= 0 and relicWait == 0 and gil == 0 and itemid~=1451 and itemid~=1454 and itemid~=1457) then
-        eventParams = getRelicParameters(currentRelic)
-
-        -- Has currencyamount of currencytype, and nothing additional.  See below for Aegis, since it's different.
-        if (count == eventParams[6] and trade:hasItemQty(eventParams[5], eventParams[6])) then
-            tradeOK = true
-
-        -- Aegis uses all three currency types for the first 3 stages.  It has currencytype 0 in these situations.
-        elseif (count == eventParams[6] * 3 and eventParams[5] == 0) then
-            -- Has currencyamount of all three currencies
-            if (trade:hasItemQty(1450, eventParams[6]) and trade:hasItemQty(1453, eventParams[6]) and trade:hasItemQty(1456, eventParams[6])) then
-                if (eventParams[5] ~= 1451 and eventParams[5] ~= 1454 and eventParams[5] ~= 1457) then -- disallow trade of 10k piece, else the gob will eat it.
-                    tradeOK = true
-                end
+        for i = 1, #requiredItems, 1 do
+            if not trade:hasItemQty(requiredItems[i], 1) then
+                return false
             end
         end
 
-        -- Trade is valid, so set variables, complete the trade, and give a CS to acknowledge it.
-        if (tradeOK == true) then
+        return true
+    end
+end
 
-            -- Stage is stored in array value 7
+function onTrade(player, npc, trade)
+    local relicId = hasRelic(trade, true)
+    local currentRelic = player:getCharVar("RELIC_IN_PROGRESS")
+    local gil = trade:getGil()
 
-            -- Stage 1->2, wait until next game day
-            if (eventParams[7] == 1) then
-                player:setCharVar("RELIC_DUE_AT", getVanaMidnight())
+    if gil ~= 0 then
+        return
+    elseif relicId ~= nil then
+        local relic = relics[relicId]
+        local relicDupe = player:getCharVar("RELIC_MAKE_ANOTHER")
+
+        if player:hasItem(relicId + 1) and not relicDupe == 1 then
+            player:startEvent(20, relicId)
+        elseif currentRelic == 0 then
+            if relic[stageNumber] ~= 4 and tradeHasRequiredMaterials(trade, relicId, relic[requiredItems]) then
+                local requiredItem1 = relic[requiredItems][1] ~= nil and relic[requiredItems][1] or 0
+                local requiredItem2 = relic[requiredItems][2] ~= nil and relic[requiredItems][2] or 0
+                local requiredItem3 = relic[requiredItems][3] ~= nil and relic[requiredItems][3] or 0
+                player:setCharVar("RELIC_IN_PROGRESS", relicId)
+                player:tradeComplete()
+                player:startEvent(11, relicId, requiredItem1, requiredItem2, requiredItem3, relic[currencyType], relic[currencyAmount], 0, relic[csParam])
+            end
+        elseif currentRelic ~= 0 and relicId ~= currentRelic then
+            player:startEvent(87)
+        end
+    elseif currentRelic ~= 0 then
+        local relic = relics[currentRelic]
+        local currentStage = relic[stageNumber]
 
-            -- Stage 2->3, wait RELIC_2ND_UPGRADE_WAIT_TIME (7200s / 2 hours default)
-            elseif (eventParams[7] == 2) then
+        if currentStage ~= 4 and tradeHasRequiredCurrency(trade, currentRelic) then
+            if currentStage == 1 then
+                player:setCharVar("RELIC_DUE_AT", getVanaMidnight())
+            elseif currentStage == 2 then
                 player:setCharVar("RELIC_DUE_AT", os.time() + RELIC_2ND_UPGRADE_WAIT_TIME)
-
-            -- Stage 3->4, wait RELIC_3RD_UPGRADE_WAIT_TIME (3600s / 1 hour default)
-            elseif (eventParams[7] == 3) then
+            elseif currentStage == 3 then
                 player:setCharVar("RELIC_DUE_AT", os.time() + RELIC_3RD_UPGRADE_WAIT_TIME)
             end
 
             player:tradeComplete()
-            player:startEvent(13, currentRelic, eventParams[5], eventParams[6], 0, 0, 0, 0, eventParams[8])
+            player:startEvent(13, currentRelic, relic[currencyType], relic[currencyAmount], 0, 0, 0, 0, relic[csParam])
         end
     end
-
 end
 
 function onTrigger(player, npc)
-    local itemid = hasRelic(player, 1)
-    local eventParams = {} -- item1, item2, item3, num_items, currencytype, currencyamount, finalvar
+    local relicId = hasRelic(player, false)
     local currentRelic = player:getCharVar("RELIC_IN_PROGRESS")
-    local relicWait = player:getCharVar("RELIC_DUE_AT") -- Stores time that relic can be retrieved after
+    local relicWait = player:getCharVar("RELIC_DUE_AT")
     local relicConquest = player:getCharVar("RELIC_CONQUEST_WAIT")
 
-    -- Working on a relic, waiting on completion, and time hasn't passed yet, so tell them to wait longer.
-    if (currentRelic ~= 0 and relicWait ~= 0 and relicWait > os.time()) then
-        eventParams = getRelicParameters(currentRelic)
-
-        -- Determine cutscene to play by Stage
-        if (eventParams[7] == 1) then
-            player:startEvent(15, 0, 0, 0, 0, 0, 0, 0, eventParams[8])
-        elseif (eventParams[7] == 2) then
-            player:startEvent(18, 0, 0, 0, 0, 0, 0, 0, eventParams[8])
-        elseif (eventParams[7] == 3) then
-            player:startEvent(51, 0, 0, 0, 0, 0, 0, 0, eventParams[8])
-        end
-
-    -- Working on a relic, waiting on completion, and time has passed.
-    elseif (currentRelic ~= 0 and relicWait ~= 0 and relicWait <= os.time()) then
-        eventParams = getRelicParameters(currentRelic)
-
-        -- Determine the cutscene to play by Stage
-        if (eventParams[7] == 1) then
-            player:startEvent(16, currentRelic, 0, 0, 0, 0, 0, 0, eventParams[8])
-        elseif (eventParams[7] == 2) then
-            player:startEvent(19, currentRelic, 0, 0, 0, 0, 0, 0, eventParams[8])
-        elseif (eventParams[7] == 3) then
-            player:startEvent(52, currentRelic, 0, 0, 0, 0, 0, 0, eventParams[8])
+    if currentRelic ~= 0 and relicWait ~= 0 and relics[currentRelic][stageNumber] ~= 4 then
+        local relic = relics[currentRelic]
+        local currentStage = relic[stageNumber]
+
+        if relicWait > os.time() then
+            -- Not enough time has passed
+            if currentStage == 1 then
+                player:startEvent(15, 0, 0, 0, 0, 0, 0, 0, relic[csParam])
+            elseif currentStage == 2 then
+                player:startEvent(18, 0, 0, 0, 0, 0, 0, 0, relic[csParam])
+            elseif currentStage == 3 then
+                player:startEvent(51, 0, 0, 0, 0, 0, 0, 0, relic[csParam])
+            end
+        elseif relicWait <= os.time() then
+            -- Enough time has passed
+            if currentStage == 1 then
+                player:startEvent(16, currentRelic, 0, 0, 0, 0, 0, 0, relic[csParam])
+            elseif currentStage == 2 then
+                player:startEvent(19, currentRelic, 0, 0, 0, 0, 0, 0, relic[csParam])
+            elseif currentStage == 3 then
+                player:startEvent(52, currentRelic, 0, 0, 0, 0, 0, 0, relic[csParam])
+            end
         end
-
-    -- Working on a relic and not waiting, so currency is due
-    elseif (currentRelic ~= 0 and relicWait == 0) then
-        eventParams = getRelicParameters(currentRelic)
-        player:startEvent(12, currentRelic, eventParams[5], eventParams[6], 0, 0, 0, 0, eventParams[8])
-
-    -- No relic, or waiting until next conquest tally.
-    elseif (itemid == nil or relicConquest > os.time()) then
+    elseif currentRelic ~= 0 and relicWait == 0 and relics[currentRelic][stageNumber] ~= 4 then
+        -- Need currency to start timer
+        player:startEvent(12, currentRelic, relic[currencyType], relic[currencyAmount], 0, 0, 0, 0, relic[csParam])
+    elseif relicId == nil or relicConquest > os.time() then
+        -- Player doesn't have a relevant item and hasn't started one
         player:startEvent(10)
-
-    -- Found a relic and conquest tally is not due (0, or passed), time to explain a stage
-    elseif (itemid ~= nil and relicConquest <= os.time()) then
-        eventParams = getRelicParameters(itemid)
-
-        -- Determine stage based on eventParams[7]
-        if (eventParams[7] == 1) then
-            player:startEvent(14, itemid, eventParams[1], eventParams[2], eventParams[3], 0, 0, 0, eventParams[8])
-        elseif (eventParams[7] == 2) then
-            player:startEvent(17, itemid, eventParams[1], eventParams[2], eventParams[3], 0, 0, 0, eventParams[8])
-        elseif (eventParams[7] == 3) then
-            player:startEvent(50, itemid, eventParams[1], 0, 0, 0, 0, 0, eventParams[8])
-
-        -- Stage 4 logic starts here.  Every weapon has its own cutscene.
-        elseif (eventParams[7] == 4) then
-            switch (itemid): caseof
-            { -- Fragment for body, Necropsyche for soul
-                [18263] = function (x) player:startEvent(68, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Spharai
-                [18269] = function (x) player:startEvent(69, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Mandau
-                [18275] = function (x) player:startEvent(70, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Excalibur
-                [18281] = function (x) player:startEvent(71, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Ragnarok
-                [18287] = function (x) player:startEvent(72, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Guttler
-                [18293] = function (x) player:startEvent(73, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Bravura
-                [18299] = function (x) player:startEvent(75, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Gungnir
-                [18305] = function (x) player:startEvent(74, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Apocalypse
-                [18311] = function (x) player:startEvent(76, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Kikoku
-                [18317] = function (x) player:startEvent(77, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Amanomurakumo
-                [18323] = function (x) player:startEvent(78, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Mjollnir
-                [18329] = function (x) player:startEvent(79, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Claustrum
-                [18335] = function (x) player:startEvent(81, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Annihilator
-                [18341] = function (x) player:startEvent(82, eventParams[2], eventParams[1], eventParams[5], eventParams[6], itemid); end, -- Gjallarhorn
-                [18347] = function (x) player:startEvent(80, eventParams[1], eventParams[2], eventParams[5], eventParams[6], itemid); end, -- Yoichinoyumi
-                [15069] = function (x) player:startEvent(86, eventParams[2], eventParams[1], eventParams[5], eventParams[6], itemid); end, -- Aegis
-            }
+    elseif relicId ~= nil and relicConquest <= os.time() then
+        -- Player has a relevant item and conquest tally has passed
+        local relic = relics[relicId]
+        local currentStage = relic[stageNumber]
+        local requiredItem1 = relic[requiredItems][1] ~= nil and relic[requiredItems][1] or 0
+        local requiredItem2 = relic[requiredItems][2] ~= nil and relic[requiredItems][2] or 0
+        local requiredItem3 = relic[requiredItems][3] ~= nil and relic[requiredItems][3] or 0
+
+        if currentStage == 1 then
+            player:startEvent(14, relicId, requiredItem1, requiredItem2, requiredItem3, 0, 0, 0, relic[csParam])
+        elseif currentStage == 2 then
+            player:startEvent(17, relicId, requiredItem1, requiredItem2, requiredItem3, 0, 0, 0, relic[csParam])
+        elseif currentStage == 3 then
+            player:startEvent(50, relicId, requiredItem1, requiredItem2, requiredItem3, 0, 0, 0, relic[csParam])
+        elseif currentStage == 4 then
+            switch(relicId):caseof
+                {
+                    -- Fragment for body, Necropsyche for soul
+                    [18263] = function(x) player:startEvent(68, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Spharai
+                    [18269] = function(x) player:startEvent(69, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Mandau
+                    [18275] = function(x) player:startEvent(70, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Excalibur
+                    [18281] = function(x) player:startEvent(71, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Ragnarok
+                    [18287] = function(x) player:startEvent(72, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Guttler
+                    [18293] = function(x) player:startEvent(73, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Bravura
+                    [18299] = function(x) player:startEvent(75, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Gungnir
+                    [18305] = function(x) player:startEvent(74, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Apocalypse
+                    [18311] = function(x) player:startEvent(76, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Kikoku
+                    [18317] = function(x) player:startEvent(77, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Amanomurakumo
+                    [18323] = function(x) player:startEvent(78, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Mjollnir
+                    [18329] = function(x) player:startEvent(79, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Claustrum
+                    [18335] = function(x) player:startEvent(81, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Annihilator
+                    [18341] = function(x) player:startEvent(82, requiredItem2, requiredItem1, relic[currencyType], relic[currencyAmount], relicId); end, -- Gjallarhorn
+                    [18347] = function(x) player:startEvent(80, requiredItem1, requiredItem2, relic[currencyType], relic[currencyAmount], relicId); end, -- Yoichinoyumi
+                    [15069] = function(x) player:startEvent(86, requiredItem2, requiredItem1, relic[currencyType], relic[currencyAmount], relicId); end, -- Aegis
+                }
         end
-
-    -- Should never happen, but should be here just in case.
     else
         player:startEvent(10)
     end
 end
 
 function onEventUpdate(player, csid, option)
-    -- printf("Update CSID: %u", csid)
-    -- printf("Update RESULT: %u", option)
-
     -- Handles the displayed currency types and amounts for Aegis Stage 1->2, 2->3, and 3->4 based on option.
     if ((csid == 11 or csid == 12 or csid == 13) and option ~= 0) then
         if (option == 1) then
@@ -307,9 +315,6 @@ function onEventUpdate(player, csid, option)
 end
 
 function onEventFinish(player, csid, option)
-    -- printf("Finish CSID: %u", csid)
-    -- printf("Finish RESULT: %u", option)
-
     local reward = player:getCharVar("RELIC_IN_PROGRESS")
 
     -- User is cancelling a relic.  Null everything out, it never happened.
@@ -319,56 +324,56 @@ function onEventFinish(player, csid, option)
         player:setCharVar("RELIC_MAKE_ANOTHER", 0)
         player:setCharVar("RELIC_CONQUEST_WAIT", 0)
 
-    -- User is okay with making a relic they cannot possibly accept
+        -- User is okay with making a relic they cannot possibly accept
     elseif (csid == 20 and option == 1) then
         player:setCharVar("RELIC_MAKE_ANOTHER", 1)
 
-    -- Picking up a finished relic stage 1>2 and 2>3.
+        -- Picking up a finished relic stage 1>2 and 2>3.
     elseif ((csid == 16 or csid == 19) and reward ~= 0) then
         if (player:getFreeSlotsCount() < 1) then
-            player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, reward+1)
+            player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, reward + 1)
         else
-            player:addItem(reward+1)
-            player:messageSpecial(ID.text.ITEM_OBTAINED, reward+1)
+            player:addItem(reward + 1)
+            player:messageSpecial(ID.text.ITEM_OBTAINED, reward + 1)
             player:setCharVar("RELIC_IN_PROGRESS", 0)
             player:setCharVar("RELIC_DUE_AT", 0)
             player:setCharVar("RELIC_MAKE_ANOTHER", 0)
             player:setCharVar("RELIC_CONQUEST_WAIT", getConquestTally())
         end
-    -- Picking up a finished relic stage 3>4.
+        -- Picking up a finished relic stage 3>4.
     elseif (csid == 52 and reward ~= 0) then
         if (player:getFreeSlotsCount() < 1) then
-            player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, reward+1)
+            player:messageSpecial(ID.text.ITEM_CANNOT_BE_OBTAINED, reward + 1)
         else
-            player:addItem(reward+1)
-            player:messageSpecial(ID.text.ITEM_OBTAINED, reward+1)
+            player:addItem(reward + 1)
+            player:messageSpecial(ID.text.ITEM_OBTAINED, reward + 1)
             player:setCharVar("RELIC_IN_PROGRESS", 0)
             player:setCharVar("RELIC_DUE_AT", 0)
             player:setCharVar("RELIC_MAKE_ANOTHER", 0)
             player:setCharVar("RELIC_CONQUEST_WAIT", 0)
         end
 
-    -- Stage 4 cutscenes
+        -- Stage 4 cutscenes
     elseif ((csid >= 68 and csid <= 82) or csid == 86) then
         player:setCharVar("RELIC_CONQUEST_WAIT", 0)
-        switch (csid): caseof
-        {
-            [68] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18263); end, -- Spharai
-            [69] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18269); end, -- Mandau
-            [70] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18275); end, -- Excalibur
-            [71] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18281); end, -- Ragnarok
-            [72] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18287); end, -- Guttler
-            [73] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18293); end, -- Bravura
-            [75] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18299); end, -- Gungnir
-            [74] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18305); end, -- Apocalypse
-            [76] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18311); end, -- Kikoku
-            [77] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18317); end, -- Amanomurakumo
-            [78] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18323); end, -- Mjollnir
-            [79] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18329); end, -- Claustrum
-            [81] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18335); end, -- Annihilator
-            [82] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18341); end, -- Gjallarhorn
-            [80] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 18347); end, -- Yoichinoyumi
-            [86] = function (x) player:setCharVar("RELIC_IN_PROGRESS", 15069); end, -- Aegis
-        }
+        switch(csid):caseof
+            {
+                [68] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18263); end, -- Spharai
+                [69] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18269); end, -- Mandau
+                [70] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18275); end, -- Excalibur
+                [71] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18281); end, -- Ragnarok
+                [72] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18287); end, -- Guttler
+                [73] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18293); end, -- Bravura
+                [75] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18299); end, -- Gungnir
+                [74] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18305); end, -- Apocalypse
+                [76] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18311); end, -- Kikoku
+                [77] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18317); end, -- Amanomurakumo
+                [78] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18323); end, -- Mjollnir
+                [79] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18329); end, -- Claustrum
+                [81] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18335); end, -- Annihilator
+                [82] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18341); end, -- Gjallarhorn
+                [80] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 18347); end, -- Yoichinoyumi
+                [86] = function(x) player:setCharVar("RELIC_IN_PROGRESS", 15069); end, -- Aegis
+            }
     end
 end