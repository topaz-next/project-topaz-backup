@@ -105,10 +105,10 @@ enum MSGSERVTYPE : uint8
 
 typedef std::string string_t;
 
-// для персонажей в size хранится рост, 
+// для персонажей в size хранится рост,
 // для npc и монстров что-то вроде типа используемой модели
 
-struct look_t 
+struct look_t
 {
 	uint16 size;
     union {
@@ -120,7 +120,7 @@ struct look_t
 	uint16 head, body, hands, legs, feet, main, sub, ranged;
 };
 
-struct skills_t 
+struct skills_t
 {
 	union {
 		struct {
@@ -160,17 +160,17 @@ struct keyitems_table_t
     std::bitset<512> seenList;
 };
 
-struct keyitems_t 
+struct keyitems_t
 {
     std::array<keyitems_table_t, 7> tables;
 };
 
-struct position_t 
+struct position_t
 {
     float x;
     float y;				// высота расположения сущности относительно "уровня моря"
     float z;
-    uint16 moving;			// что-то вроде расстояния перемещения, необходимое для правильной отрисовки в клиенте количества шагов сущности 
+    uint16 moving;			// что-то вроде расстояния перемещения, необходимое для правильной отрисовки в клиенте количества шагов сущности
 	uint8 rotation;			// угол поворота сущности относительно своей позиции (используется 255 система, место 360°)
 };
 
@@ -179,31 +179,31 @@ struct stats_t
 	uint16 STR,DEX,VIT,AGI,INT,MND,CHR;
 };
 
-struct questlog_t 
+struct questlog_t
 {
 	uint8 current [32];
 	uint8 complete[32];
 };
 
-struct missionlog_t 
+struct missionlog_t
 {
 	uint16 current;
 	bool   complete[64];
 };
 
-struct assaultlog_t 
+struct assaultlog_t
 {
 	uint16 current;
 	bool   complete[128];
 };
 
-struct campaignlog_t 
+struct campaignlog_t
 {
 	uint16 current;
 	bool   complete[512];
 };
 
-struct nameflags_t 
+struct nameflags_t
 {
 	union {
 		struct {
@@ -217,7 +217,7 @@ struct nameflags_t
 };
 
 // информация для окна поиска
-struct search_t 
+struct search_t
 {
 	uint8 language;			// предпочтительный язык общения
 	uint8 messagetype;		// тип комментария
@@ -235,7 +235,7 @@ struct bazaar_t
 // через 4-ре байта начинается заголовк 0x49, 0x58, 0x46, 0x46 - IXFF
 // после заголовка идет предположительно тип сообщения:
 // 0x03 - положительный результат
-// 0x04 - ошибка (в случае ошибки начиная с 33 байта идет код ошибки uint16) 
+// 0x04 - ошибка (в случае ошибки начиная с 33 байта идет код ошибки uint16)
 
 #define LOBBY_A1_RESERVEPACKET(a)\
 unsigned char a[] = { \
@@ -299,10 +299,10 @@ class char_mini
 	uint16	m_zone;
 	uint8	m_nation;
 
-	look_t	m_look;	
+	look_t	m_look;
 
 	 char_mini() {};
 	~char_mini() {};
 };
 
-#endif // _MMO_H
\ No newline at end of file
+#endif // _MMO_H